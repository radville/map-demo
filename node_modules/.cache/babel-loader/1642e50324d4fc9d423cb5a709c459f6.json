{"ast":null,"code":"define([\"./global\", \"require\", \"module\"], function (global, require, module) {\n  // module:\n  //\t\tdojo/has\n  // summary:\n  //\t\tDefines the has.js API and several feature tests used by dojo.\n  // description:\n  //\t\tThis module defines the has API as described by the project has.js with the following additional features:\n  //\n  //\t\t- the has test cache is exposed at has.cache.\n  //\t\t- the method has.add includes a forth parameter that controls whether or not existing tests are replaced\n  //\t\t- the loader's has cache may be optionally copied into this module's has cahce.\n  //\n  //\t\tThis module adopted from https://github.com/phiggins42/has.js; thanks has.js team!\n  // try to pull the has implementation from the loader; both the dojo loader and bdLoad provide one\n  // if using a foreign loader, then the has cache may be initialized via the config object for this module\n  // WARNING: if a foreign loader defines require.has to be something other than the has.js API, then this implementation fail\n  var has = require.has || function () {};\n\n  if (!has(\"dojo-has-api\")) {\n    var isBrowser = // the most fundamental decision: are we in the browser?\n    typeof window != \"undefined\" && typeof location != \"undefined\" && typeof document != \"undefined\" && window.location == location && window.document == document,\n        // has API variables\n    doc = isBrowser && document,\n        element = doc && doc.createElement(\"DiV\"),\n        cache = module.config && module.config() || {};\n\n    has = function (name) {\n      // summary:\n      //\t\tReturn the current value of the named feature.\n      //\n      // name: String|Integer\n      //\t\tThe name (if a string) or identifier (if an integer) of the feature to test.\n      //\n      // description:\n      //\t\tReturns the value of the feature named by name. The feature must have been\n      //\t\tpreviously added to the cache by has.add.\n      return typeof cache[name] == \"function\" ? cache[name] = cache[name](global, doc, element) : cache[name]; // Boolean\n    };\n\n    has.cache = cache;\n\n    has.add = function (name, test, now, force) {\n      // summary:\n      //\t \tRegister a new feature test for some named feature.\n      // name: String|Integer\n      //\t \tThe name (if a string) or identifier (if an integer) of the feature to test.\n      // test: Function\n      //\t\t A test function to register. If a function, queued for testing until actually\n      //\t\t needed. The test function should return a boolean indicating\n      //\t \tthe presence of a feature or bug.\n      // now: Boolean?\n      //\t\t Optional. Omit if `test` is not a function. Provides a way to immediately\n      //\t\t run the test and cache the result.\n      // force: Boolean?\n      //\t \tOptional. If the test already exists and force is truthy, then the existing\n      //\t \ttest will be replaced; otherwise, add does not replace an existing test (that\n      //\t \tis, by default, the first test advice wins).\n      // example:\n      //\t\tA redundant test, testFn with immediate execution:\n      //\t|\thas.add(\"javascript\", function(){ return true; }, true);\n      //\n      // example:\n      //\t\tAgain with the redundantness. You can do this in your tests, but we should\n      //\t\tnot be doing this in any internal has.js tests\n      //\t|\thas.add(\"javascript\", true);\n      //\n      // example:\n      //\t\tThree things are passed to the testFunction. `global`, `document`, and a generic element\n      //\t\tfrom which to work your test should the need arise.\n      //\t|\thas.add(\"bug-byid\", function(g, d, el){\n      //\t|\t\t// g\t== global, typically window, yadda yadda\n      //\t|\t\t// d\t== document object\n      //\t|\t\t// el == the generic element. a `has` element.\n      //\t|\t\treturn false; // fake test, byid-when-form-has-name-matching-an-id is slightly longer\n      //\t|\t});\n      (typeof cache[name] == \"undefined\" || force) && (cache[name] = test);\n      return now && has(name);\n    }; // since we're operating under a loader that doesn't provide a has API, we must explicitly initialize\n    // has as it would have otherwise been initialized by the dojo loader; use has.add to the builder\n    // can optimize these away iff desired\n\n\n    has.add(\"host-browser\", isBrowser);\n    has.add(\"host-node\", typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8);\n    has.add(\"host-rhino\", typeof load == \"function\" && (typeof Packages == \"function\" || typeof Packages == \"object\"));\n    has.add(\"dom\", isBrowser);\n    has.add(\"dojo-dom-ready-api\", 1);\n    has.add(\"dojo-sniff\", 1);\n  }\n\n  if (has(\"host-browser\")) {\n    // Common application level tests\n    has.add(\"dom-addeventlistener\", !!document.addEventListener); // Do the device and browser have touch capability?\n\n    has.add(\"touch\", \"ontouchstart\" in document || \"onpointerdown\" in document && navigator.maxTouchPoints > 0 || window.navigator.msMaxTouchPoints); // Touch events support\n\n    has.add(\"touch-events\", \"ontouchstart\" in document); // Test if pointer events are supported and enabled, with either standard names (\"pointerdown\" etc.) or\n    // IE specific names (\"MSPointerDown\" etc.).  Tests are designed to work on embedded C# WebBrowser Controls\n    // in addition to IE, Edge, and future versions of Firefox and Chrome.\n    // Note that on IE11, has(\"pointer-events\") and has(\"MSPointer\") are both true.\n\n    has.add(\"pointer-events\", \"pointerEnabled\" in window.navigator ? window.navigator.pointerEnabled : \"PointerEvent\" in window);\n    has.add(\"MSPointer\", window.navigator.msPointerEnabled); // The \"pointermove\"\" event is only continuously emitted in a touch environment if\n    // the target node's \"touch-action\"\" CSS property is set to \"none\"\n    // https://www.w3.org/TR/pointerevents/#the-touch-action-css-property\n\n    has.add(\"touch-action\", has(\"touch\") && has(\"pointer-events\")); // I don't know if any of these tests are really correct, just a rough guess\n\n    has.add(\"device-width\", screen.availWidth || innerWidth); // Tests for DOMNode.attributes[] behavior:\n    //\t - dom-attributes-explicit - attributes[] only lists explicitly user specified attributes\n    //\t - dom-attributes-specified-flag (IE8) - need to check attr.specified flag to skip attributes user didn't specify\n    //\t - Otherwise, in IE6-7. attributes[] will list hundreds of values, so need to do outerHTML to get attrs instead.\n\n    var form = document.createElement(\"form\");\n    has.add(\"dom-attributes-explicit\", form.attributes.length == 0); // W3C\n\n    has.add(\"dom-attributes-specified-flag\", form.attributes.length > 0 && form.attributes.length < 40); // IE8\n  }\n\n  has.clearElement = function (element) {\n    // summary:\n    //\t Deletes the contents of the element passed to test functions.\n    element.innerHTML = \"\";\n    return element;\n  };\n\n  has.normalize = function (id, toAbsMid) {\n    // summary:\n    //\t Resolves id into a module id based on possibly-nested tenary expression that branches on has feature test value(s).\n    //\n    // toAbsMid: Function\n    //\t Resolves a relative module id into an absolute module id\n    var tokens = id.match(/[\\?:]|[^:\\?]*/g),\n        i = 0,\n        get = function (skip) {\n      var term = tokens[i++];\n\n      if (term == \":\") {\n        // empty string module name, resolves to 0\n        return 0;\n      } else {\n        // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n        if (tokens[i++] == \"?\") {\n          if (!skip && has(term)) {\n            // matched the feature, get the first value from the options\n            return get();\n          } else {\n            // did not match, get the second value, passing over the first\n            get(true);\n            return get(skip);\n          }\n        } // a module\n\n\n        return term || 0;\n      }\n    };\n\n    id = get();\n    return id && toAbsMid(id);\n  };\n\n  has.load = function (id, parentRequire, loaded) {\n    // summary:\n    //\t\tConditional loading of AMD modules based on a has feature test value.\n    // id: String\n    //\t\tGives the resolved module id to load.\n    // parentRequire: Function\n    //\t\tThe loader require function with respect to the module that contained the plugin resource in it's\n    //\t\tdependency list.\n    // loaded: Function\n    //\t Callback to loader that consumes result of plugin demand.\n    if (id) {\n      parentRequire([id], loaded);\n    } else {\n      loaded();\n    }\n  };\n\n  return has;\n});","map":{"version":3,"sources":["/Users/Laura/Development/solar-calculator/node_modules/dojo/has.js"],"names":["define","global","require","module","has","isBrowser","window","location","document","doc","element","createElement","cache","config","name","add","test","now","force","process","versions","node","v8","load","Packages","addEventListener","navigator","maxTouchPoints","msMaxTouchPoints","pointerEnabled","msPointerEnabled","screen","availWidth","innerWidth","form","attributes","length","clearElement","innerHTML","normalize","id","toAbsMid","tokens","match","i","get","skip","term","parentRequire","loaded"],"mappings":"AAAAA,MAAM,CAAC,CAAC,UAAD,EAAa,SAAb,EAAwB,QAAxB,CAAD,EAAoC,UAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAiC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,MAAIC,GAAG,GAAGF,OAAO,CAACE,GAAR,IAAe,YAAU,CAAE,CAArC;;AACA,MAAG,CAACA,GAAG,CAAC,cAAD,CAAP,EAAwB;AACvB,QACCC,SAAS,GACR;AACA,WAAOC,MAAP,IAAiB,WAAjB,IACA,OAAOC,QAAP,IAAmB,WADnB,IAEA,OAAOC,QAAP,IAAmB,WAFnB,IAGAF,MAAM,CAACC,QAAP,IAAmBA,QAHnB,IAG+BD,MAAM,CAACE,QAAP,IAAmBA,QANpD;AAAA,QAQC;AACAC,IAAAA,GAAG,GAAGJ,SAAS,IAAIG,QATpB;AAAA,QAUCE,OAAO,GAAGD,GAAG,IAAIA,GAAG,CAACE,aAAJ,CAAkB,KAAlB,CAVlB;AAAA,QAWCC,KAAK,GAAIT,MAAM,CAACU,MAAP,IAAiBV,MAAM,CAACU,MAAP,EAAlB,IAAsC,EAX/C;;AAaAT,IAAAA,GAAG,GAAG,UAASU,IAAT,EAAc;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAO,OAAOF,KAAK,CAACE,IAAD,CAAZ,IAAsB,UAAtB,GAAoCF,KAAK,CAACE,IAAD,CAAL,GAAcF,KAAK,CAACE,IAAD,CAAL,CAAYb,MAAZ,EAAoBQ,GAApB,EAAyBC,OAAzB,CAAlD,GAAuFE,KAAK,CAACE,IAAD,CAAnG,CAXmB,CAWwF;AAC3G,KAZD;;AAcAV,IAAAA,GAAG,CAACQ,KAAJ,GAAYA,KAAZ;;AAEAR,IAAAA,GAAG,CAACW,GAAJ,GAAU,UAASD,IAAT,EAAeE,IAAf,EAAqBC,GAArB,EAA0BC,KAA1B,EAAgC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAC,OAAON,KAAK,CAACE,IAAD,CAAZ,IAAoB,WAApB,IAAmCI,KAApC,MAA+CN,KAAK,CAACE,IAAD,CAAL,GAAaE,IAA5D;AACA,aAAOC,GAAG,IAAIb,GAAG,CAACU,IAAD,CAAjB;AACA,KArCD,CA9BuB,CAqEvB;AACA;AACA;;;AACAV,IAAAA,GAAG,CAACW,GAAJ,CAAQ,cAAR,EAAwBV,SAAxB;AACAD,IAAAA,GAAG,CAACW,GAAJ,CAAQ,WAAR,EAAsB,OAAOI,OAAP,IAAkB,QAAlB,IAA8BA,OAAO,CAACC,QAAtC,IAAkDD,OAAO,CAACC,QAAR,CAAiBC,IAAnE,IAA2EF,OAAO,CAACC,QAAR,CAAiBE,EAAlH;AACAlB,IAAAA,GAAG,CAACW,GAAJ,CAAQ,YAAR,EAAuB,OAAOQ,IAAP,IAAe,UAAf,KAA8B,OAAOC,QAAP,IAAmB,UAAnB,IAAiC,OAAOA,QAAP,IAAmB,QAAlF,CAAvB;AACApB,IAAAA,GAAG,CAACW,GAAJ,CAAQ,KAAR,EAAeV,SAAf;AACAD,IAAAA,GAAG,CAACW,GAAJ,CAAQ,oBAAR,EAA8B,CAA9B;AACAX,IAAAA,GAAG,CAACW,GAAJ,CAAQ,YAAR,EAAsB,CAAtB;AACA;;AAED,MAAGX,GAAG,CAAC,cAAD,CAAN,EAAuB;AACtB;AACAA,IAAAA,GAAG,CAACW,GAAJ,CAAQ,sBAAR,EAAgC,CAAC,CAACP,QAAQ,CAACiB,gBAA3C,EAFsB,CAItB;;AACArB,IAAAA,GAAG,CAACW,GAAJ,CAAQ,OAAR,EAAiB,kBAAkBP,QAAlB,IACZ,mBAAmBA,QAAnB,IAA+BkB,SAAS,CAACC,cAAV,GAA2B,CAD9C,IAEbrB,MAAM,CAACoB,SAAP,CAAiBE,gBAFrB,EALsB,CAStB;;AACAxB,IAAAA,GAAG,CAACW,GAAJ,CAAQ,cAAR,EAAwB,kBAAkBP,QAA1C,EAVsB,CAYtB;AACA;AACA;AACA;;AACAJ,IAAAA,GAAG,CAACW,GAAJ,CAAQ,gBAAR,EAA0B,oBAAoBT,MAAM,CAACoB,SAA3B,GACxBpB,MAAM,CAACoB,SAAP,CAAiBG,cADO,GACU,kBAAkBvB,MADtD;AAEAF,IAAAA,GAAG,CAACW,GAAJ,CAAQ,WAAR,EAAqBT,MAAM,CAACoB,SAAP,CAAiBI,gBAAtC,EAlBsB,CAmBtB;AACA;AACA;;AACA1B,IAAAA,GAAG,CAACW,GAAJ,CAAQ,cAAR,EAAwBX,GAAG,CAAC,OAAD,CAAH,IAAgBA,GAAG,CAAC,gBAAD,CAA3C,EAtBsB,CAwBtB;;AACAA,IAAAA,GAAG,CAACW,GAAJ,CAAQ,cAAR,EAAwBgB,MAAM,CAACC,UAAP,IAAqBC,UAA7C,EAzBsB,CA2BtB;AACA;AACA;AACA;;AACA,QAAIC,IAAI,GAAG1B,QAAQ,CAACG,aAAT,CAAuB,MAAvB,CAAX;AACAP,IAAAA,GAAG,CAACW,GAAJ,CAAQ,yBAAR,EAAmCmB,IAAI,CAACC,UAAL,CAAgBC,MAAhB,IAA0B,CAA7D,EAhCsB,CAgC2C;;AACjEhC,IAAAA,GAAG,CAACW,GAAJ,CAAQ,+BAAR,EAAyCmB,IAAI,CAACC,UAAL,CAAgBC,MAAhB,GAAyB,CAAzB,IAA8BF,IAAI,CAACC,UAAL,CAAgBC,MAAhB,GAAyB,EAAhG,EAjCsB,CAiC+E;AACrG;;AAEDhC,EAAAA,GAAG,CAACiC,YAAJ,GAAmB,UAAS3B,OAAT,EAAiB;AACnC;AACA;AACAA,IAAAA,OAAO,CAAC4B,SAAR,GAAmB,EAAnB;AACA,WAAO5B,OAAP;AACA,GALD;;AAOAN,EAAAA,GAAG,CAACmC,SAAJ,GAAgB,UAASC,EAAT,EAAaC,QAAb,EAAsB;AACrC;AACA;AACA;AACA;AACA;AACA,QACCC,MAAM,GAAGF,EAAE,CAACG,KAAH,CAAS,gBAAT,CADV;AAAA,QACsCC,CAAC,GAAG,CAD1C;AAAA,QAECC,GAAG,GAAG,UAASC,IAAT,EAAc;AACnB,UAAIC,IAAI,GAAGL,MAAM,CAACE,CAAC,EAAF,CAAjB;;AACA,UAAGG,IAAI,IAAI,GAAX,EAAe;AACd;AACA,eAAO,CAAP;AACA,OAHD,MAGK;AACJ;AACA,YAAGL,MAAM,CAACE,CAAC,EAAF,CAAN,IAAe,GAAlB,EAAsB;AACrB,cAAG,CAACE,IAAD,IAAS1C,GAAG,CAAC2C,IAAD,CAAf,EAAsB;AACrB;AACA,mBAAOF,GAAG,EAAV;AACA,WAHD,MAGK;AACJ;AACAA,YAAAA,GAAG,CAAC,IAAD,CAAH;AACA,mBAAOA,GAAG,CAACC,IAAD,CAAV;AACA;AACD,SAXG,CAYJ;;;AACA,eAAOC,IAAI,IAAI,CAAf;AACA;AACD,KAtBF;;AAuBAP,IAAAA,EAAE,GAAGK,GAAG,EAAR;AACA,WAAOL,EAAE,IAAIC,QAAQ,CAACD,EAAD,CAArB;AACA,GA/BD;;AAiCApC,EAAAA,GAAG,CAACmB,IAAJ,GAAW,UAASiB,EAAT,EAAaQ,aAAb,EAA4BC,MAA5B,EAAmC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAGT,EAAH,EAAM;AACLQ,MAAAA,aAAa,CAAC,CAACR,EAAD,CAAD,EAAOS,MAAP,CAAb;AACA,KAFD,MAEK;AACJA,MAAAA,MAAM;AACN;AACD,GAhBD;;AAkBA,SAAO7C,GAAP;AACA,CAjMK,CAAN","sourcesContent":["define([\"./global\", \"require\", \"module\"], function(global, require, module){\n\t// module:\n\t//\t\tdojo/has\n\t// summary:\n\t//\t\tDefines the has.js API and several feature tests used by dojo.\n\t// description:\n\t//\t\tThis module defines the has API as described by the project has.js with the following additional features:\n\t//\n\t//\t\t- the has test cache is exposed at has.cache.\n\t//\t\t- the method has.add includes a forth parameter that controls whether or not existing tests are replaced\n\t//\t\t- the loader's has cache may be optionally copied into this module's has cahce.\n\t//\n\t//\t\tThis module adopted from https://github.com/phiggins42/has.js; thanks has.js team!\n\n\t// try to pull the has implementation from the loader; both the dojo loader and bdLoad provide one\n\t// if using a foreign loader, then the has cache may be initialized via the config object for this module\n\t// WARNING: if a foreign loader defines require.has to be something other than the has.js API, then this implementation fail\n\tvar has = require.has || function(){};\n\tif(!has(\"dojo-has-api\")){\n\t\tvar\n\t\t\tisBrowser =\n\t\t\t\t// the most fundamental decision: are we in the browser?\n\t\t\t\ttypeof window != \"undefined\" &&\n\t\t\t\ttypeof location != \"undefined\" &&\n\t\t\t\ttypeof document != \"undefined\" &&\n\t\t\t\twindow.location == location && window.document == document,\n\n\t\t\t// has API variables\n\t\t\tdoc = isBrowser && document,\n\t\t\telement = doc && doc.createElement(\"DiV\"),\n\t\t\tcache = (module.config && module.config()) || {};\n\n\t\thas = function(name){\n\t\t\t// summary:\n\t\t\t//\t\tReturn the current value of the named feature.\n\t\t\t//\n\t\t\t// name: String|Integer\n\t\t\t//\t\tThe name (if a string) or identifier (if an integer) of the feature to test.\n\t\t\t//\n\t\t\t// description:\n\t\t\t//\t\tReturns the value of the feature named by name. The feature must have been\n\t\t\t//\t\tpreviously added to the cache by has.add.\n\n\t\t\treturn typeof cache[name] == \"function\" ? (cache[name] = cache[name](global, doc, element)) : cache[name]; // Boolean\n\t\t};\n\n\t\thas.cache = cache;\n\n\t\thas.add = function(name, test, now, force){\n\t\t\t// summary:\n\t\t\t//\t \tRegister a new feature test for some named feature.\n\t\t\t// name: String|Integer\n\t\t\t//\t \tThe name (if a string) or identifier (if an integer) of the feature to test.\n\t\t\t// test: Function\n\t\t\t//\t\t A test function to register. If a function, queued for testing until actually\n\t\t\t//\t\t needed. The test function should return a boolean indicating\n\t\t\t//\t \tthe presence of a feature or bug.\n\t\t\t// now: Boolean?\n\t\t\t//\t\t Optional. Omit if `test` is not a function. Provides a way to immediately\n\t\t\t//\t\t run the test and cache the result.\n\t\t\t// force: Boolean?\n\t\t\t//\t \tOptional. If the test already exists and force is truthy, then the existing\n\t\t\t//\t \ttest will be replaced; otherwise, add does not replace an existing test (that\n\t\t\t//\t \tis, by default, the first test advice wins).\n\t\t\t// example:\n\t\t\t//\t\tA redundant test, testFn with immediate execution:\n\t\t\t//\t|\thas.add(\"javascript\", function(){ return true; }, true);\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\t\tAgain with the redundantness. You can do this in your tests, but we should\n\t\t\t//\t\tnot be doing this in any internal has.js tests\n\t\t\t//\t|\thas.add(\"javascript\", true);\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\t\tThree things are passed to the testFunction. `global`, `document`, and a generic element\n\t\t\t//\t\tfrom which to work your test should the need arise.\n\t\t\t//\t|\thas.add(\"bug-byid\", function(g, d, el){\n\t\t\t//\t|\t\t// g\t== global, typically window, yadda yadda\n\t\t\t//\t|\t\t// d\t== document object\n\t\t\t//\t|\t\t// el == the generic element. a `has` element.\n\t\t\t//\t|\t\treturn false; // fake test, byid-when-form-has-name-matching-an-id is slightly longer\n\t\t\t//\t|\t});\n\n\t\t\t(typeof cache[name]==\"undefined\" || force) && (cache[name]= test);\n\t\t\treturn now && has(name);\n\t\t};\n\n\t\t// since we're operating under a loader that doesn't provide a has API, we must explicitly initialize\n\t\t// has as it would have otherwise been initialized by the dojo loader; use has.add to the builder\n\t\t// can optimize these away iff desired\n\t\thas.add(\"host-browser\", isBrowser);\n\t\thas.add(\"host-node\", (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8));\n\t\thas.add(\"host-rhino\", (typeof load == \"function\" && (typeof Packages == \"function\" || typeof Packages == \"object\")));\n\t\thas.add(\"dom\", isBrowser);\n\t\thas.add(\"dojo-dom-ready-api\", 1);\n\t\thas.add(\"dojo-sniff\", 1);\n\t}\n\n\tif(has(\"host-browser\")){\n\t\t// Common application level tests\n\t\thas.add(\"dom-addeventlistener\", !!document.addEventListener);\n\n\t\t// Do the device and browser have touch capability?\n\t\thas.add(\"touch\", \"ontouchstart\" in document\n\t\t\t|| (\"onpointerdown\" in document && navigator.maxTouchPoints > 0)\n\t\t\t|| window.navigator.msMaxTouchPoints);\n\n\t\t// Touch events support\n\t\thas.add(\"touch-events\", \"ontouchstart\" in document);\n\n\t\t// Test if pointer events are supported and enabled, with either standard names (\"pointerdown\" etc.) or\n\t\t// IE specific names (\"MSPointerDown\" etc.).  Tests are designed to work on embedded C# WebBrowser Controls\n\t\t// in addition to IE, Edge, and future versions of Firefox and Chrome.\n\t\t// Note that on IE11, has(\"pointer-events\") and has(\"MSPointer\") are both true.\n\t\thas.add(\"pointer-events\", \"pointerEnabled\" in window.navigator ?\n\t\t\t\twindow.navigator.pointerEnabled : \"PointerEvent\" in window);\n\t\thas.add(\"MSPointer\", window.navigator.msPointerEnabled);\n\t\t// The \"pointermove\"\" event is only continuously emitted in a touch environment if\n\t\t// the target node's \"touch-action\"\" CSS property is set to \"none\"\n\t\t// https://www.w3.org/TR/pointerevents/#the-touch-action-css-property\n\t\thas.add(\"touch-action\", has(\"touch\") && has(\"pointer-events\"));\n\n\t\t// I don't know if any of these tests are really correct, just a rough guess\n\t\thas.add(\"device-width\", screen.availWidth || innerWidth);\n\n\t\t// Tests for DOMNode.attributes[] behavior:\n\t\t//\t - dom-attributes-explicit - attributes[] only lists explicitly user specified attributes\n\t\t//\t - dom-attributes-specified-flag (IE8) - need to check attr.specified flag to skip attributes user didn't specify\n\t\t//\t - Otherwise, in IE6-7. attributes[] will list hundreds of values, so need to do outerHTML to get attrs instead.\n\t\tvar form = document.createElement(\"form\");\n\t\thas.add(\"dom-attributes-explicit\", form.attributes.length == 0); // W3C\n\t\thas.add(\"dom-attributes-specified-flag\", form.attributes.length > 0 && form.attributes.length < 40);\t// IE8\n\t}\n\n\thas.clearElement = function(element){\n\t\t// summary:\n\t\t//\t Deletes the contents of the element passed to test functions.\n\t\telement.innerHTML= \"\";\n\t\treturn element;\n\t};\n\n\thas.normalize = function(id, toAbsMid){\n\t\t// summary:\n\t\t//\t Resolves id into a module id based on possibly-nested tenary expression that branches on has feature test value(s).\n\t\t//\n\t\t// toAbsMid: Function\n\t\t//\t Resolves a relative module id into an absolute module id\n\t\tvar\n\t\t\ttokens = id.match(/[\\?:]|[^:\\?]*/g), i = 0,\n\t\t\tget = function(skip){\n\t\t\t\tvar term = tokens[i++];\n\t\t\t\tif(term == \":\"){\n\t\t\t\t\t// empty string module name, resolves to 0\n\t\t\t\t\treturn 0;\n\t\t\t\t}else{\n\t\t\t\t\t// postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n\t\t\t\t\tif(tokens[i++] == \"?\"){\n\t\t\t\t\t\tif(!skip && has(term)){\n\t\t\t\t\t\t\t// matched the feature, get the first value from the options\n\t\t\t\t\t\t\treturn get();\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// did not match, get the second value, passing over the first\n\t\t\t\t\t\t\tget(true);\n\t\t\t\t\t\t\treturn get(skip);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// a module\n\t\t\t\t\treturn term || 0;\n\t\t\t\t}\n\t\t\t};\n\t\tid = get();\n\t\treturn id && toAbsMid(id);\n\t};\n\n\thas.load = function(id, parentRequire, loaded){\n\t\t// summary:\n\t\t//\t\tConditional loading of AMD modules based on a has feature test value.\n\t\t// id: String\n\t\t//\t\tGives the resolved module id to load.\n\t\t// parentRequire: Function\n\t\t//\t\tThe loader require function with respect to the module that contained the plugin resource in it's\n\t\t//\t\tdependency list.\n\t\t// loaded: Function\n\t\t//\t Callback to loader that consumes result of plugin demand.\n\n\t\tif(id){\n\t\t\tparentRequire([id], loaded);\n\t\t}else{\n\t\t\tloaded();\n\t\t}\n\t};\n\n\treturn has;\n});\n"]},"metadata":{},"sourceType":"script"}