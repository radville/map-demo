{"ast":null,"code":"var _jsxFileName = \"/Users/Laura/Development/solar-calculator/src/components/WebMapView.js\";\n// Adapted from ArcGIS tutorials, including:\n//  \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\n// and \"Draw Graphics\" at https://developers.arcgis.com/labs/javascript/draw-graphics/\nimport React from 'react';\nimport { loadModules } from 'esri-loader';\nimport ReactDOM from 'react-dom';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', 'esri/views/MapView', 'esri/widgets/Search', \"esri/Graphic\", \"esri/layers/GraphicsLayer\", \"esri/widgets/Sketch\", \"esri/geometry/geometryEngine\"], {\n      css: true\n    }).then(([ArcGISMap, MapView, Search, Graphic, GraphicsLayer, Sketch, geometryEngine]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n      let view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-100, 38],\n        zoom: 4\n      }); // add searchbar \n\n      let search = new Search({\n        view: view\n      });\n      view.ui.add(search, \"top-right\"); // add a graphics layer\n\n      let graphicsLayer = new GraphicsLayer();\n      map.add(graphicsLayer); // Add the Sketch toolbar to draw polygons\n\n      let sketch = new Sketch({\n        view: view,\n        layer: graphicsLayer\n      });\n      view.ui.add(sketch, \"top-right\");\n      sketch.on(\"create\", function (event) {\n        if (event.state === \"complete\") {\n          let geometry = event.graphic.geometry.extent; // area in square meters, accounts for curve of Earth\n\n          let area = geometryEngine.geodesicArea(geometry, 109404);\n          ReactDOM.render(area, document.getElementById('area'));\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap esri\",\n      ref: this.mapRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Laura/Development/solar-calculator/src/components/WebMapView.js"],"names":["React","loadModules","ReactDOM","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","css","then","ArcGISMap","MapView","Search","Graphic","GraphicsLayer","Sketch","geometryEngine","map","basemap","view","container","current","center","zoom","search","ui","add","graphicsLayer","sketch","layer","on","event","state","geometry","graphic","extent","area","geodesicArea","render","document","getElementById","componentWillUnmount"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcP,KAAK,CAACQ,SAAN,EAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB;AACAR,IAAAA,WAAW,CAAC,CAAC,UAAD,EACV,oBADU,EAEV,qBAFU,EAGV,cAHU,EAIV,2BAJU,EAKV,qBALU,EAMV,8BANU,CAAD,EAOJ;AAAES,MAAAA,GAAG,EAAE;AAAP,KAPI,CAAX,CAQCC,IARD,CAQM,CAAC,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,aAAtC,EAAqDC,MAArD,EAA6DC,cAA7D,CAAD,KAAkF;AACtF,YAAMC,GAAG,GAAG,IAAIP,SAAJ,CAAc;AACxBQ,QAAAA,OAAO,EAAE;AADe,OAAd,CAAZ;AAIA,UAAIC,IAAI,GAAG,IAAIR,OAAJ,CAAY;AACrBS,QAAAA,SAAS,EAAE,KAAKf,MAAL,CAAYgB,OADF;AAErBJ,QAAAA,GAAG,EAAEA,GAFgB;AAGrBK,QAAAA,MAAM,EAAE,CAAC,CAAC,GAAF,EAAO,EAAP,CAHa;AAIrBC,QAAAA,IAAI,EAAE;AAJe,OAAZ,CAAX,CALsF,CAYtF;;AACA,UAAIC,MAAM,GAAG,IAAIZ,MAAJ,CAAW;AACtBO,QAAAA,IAAI,EAAEA;AADgB,OAAX,CAAb;AAGAA,MAAAA,IAAI,CAACM,EAAL,CAAQC,GAAR,CAAYF,MAAZ,EAAoB,WAApB,EAhBsF,CAkBtF;;AACA,UAAIG,aAAa,GAAG,IAAIb,aAAJ,EAApB;AACAG,MAAAA,GAAG,CAACS,GAAJ,CAAQC,aAAR,EApBsF,CAsBtF;;AACA,UAAIC,MAAM,GAAG,IAAIb,MAAJ,CAAW;AACtBI,QAAAA,IAAI,EAAEA,IADgB;AAEtBU,QAAAA,KAAK,EAAEF;AAFe,OAAX,CAAb;AAKAR,MAAAA,IAAI,CAACM,EAAL,CAAQC,GAAR,CAAYE,MAAZ,EAAoB,WAApB;AAEAA,MAAAA,MAAM,CAACE,EAAP,CAAU,QAAV,EAAoB,UAASC,KAAT,EAAgB;AAClC,YAAIA,KAAK,CAACC,KAAN,KAAgB,UAApB,EAAgC;AAC9B,cAAIC,QAAQ,GAAGF,KAAK,CAACG,OAAN,CAAcD,QAAd,CAAuBE,MAAtC,CAD8B,CAG9B;;AACA,cAAIC,IAAI,GAAGpB,cAAc,CAACqB,YAAf,CAA4BJ,QAA5B,EAAsC,MAAtC,CAAX;AAEAjC,UAAAA,QAAQ,CAACsC,MAAT,CAAgBF,IAAhB,EAAsBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAtB;AAED;AACF,OAVD;AAYD,KAlDD;AAmDD;;AAGDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKtB,IAAT,EAAe;AACb;AACA,WAAKA,IAAL,CAAUC,SAAV,GAAsB,IAAtB;AACD;AACF;;AAEDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAE,KAAKjC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA1E6C","sourcesContent":["// Adapted from ArcGIS tutorials, including:\n//  \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\n// and \"Draw Graphics\" at https://developers.arcgis.com/labs/javascript/draw-graphics/\n\nimport React from 'react';\nimport { loadModules } from 'esri-loader';\nimport ReactDOM from 'react-dom'\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', \n      'esri/views/MapView', \n      'esri/widgets/Search',\n      \"esri/Graphic\",\n      \"esri/layers/GraphicsLayer\",\n      \"esri/widgets/Sketch\",\n      \"esri/geometry/geometryEngine\"\n        ], { css: true })\n    .then(([ArcGISMap, MapView, Search, Graphic, GraphicsLayer, Sketch, geometryEngine]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n\n      let view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-100, 38],\n        zoom: 4\n      });\n      \n      // add searchbar \n      let search = new Search({\n        view: view\n      });\n      view.ui.add(search, \"top-right\");\n\n      // add a graphics layer\n      let graphicsLayer = new GraphicsLayer();\n      map.add(graphicsLayer)\n\n      // Add the Sketch toolbar to draw polygons\n      let sketch = new Sketch({\n        view: view,\n        layer: graphicsLayer\n      })\n\n      view.ui.add(sketch, \"top-right\")\n\n      sketch.on(\"create\", function(event) {\n        if (event.state === \"complete\") {\n          let geometry = event.graphic.geometry.extent\n\n          // area in square meters, accounts for curve of Earth\n          let area = geometryEngine.geodesicArea(geometry, 109404)\n\n          ReactDOM.render(area, document.getElementById('area'));\n       \n        }       \n      });\n      \n    });\n  }\n\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"webmap esri\" ref={this.mapRef} />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}