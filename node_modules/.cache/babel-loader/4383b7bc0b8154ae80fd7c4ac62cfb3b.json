{"ast":null,"code":"var _jsxFileName = \"/Users/Laura/Development/solar-calculator/src/components/WebMapView.js\";\n// Adapted from ArcGIS tutorials, including:\n//  \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\n// and \"Draw Graphics\" at https://developers.arcgis.com/labs/javascript/draw-graphics/\nimport React from 'react';\nimport { loadModules } from 'esri-loader'; // import geometryService from '../scripts/geometryService'\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', 'esri/views/MapView', 'esri/widgets/Search', \"esri/Graphic\", \"esri/layers/GraphicsLayer\", \"esri/widgets/Sketch\", \"esri/geometry/geometryEngine\", \"esri/graphicsUtils\"], {\n      css: true\n    }).then(([ArcGISMap, MapView, Search, Graphic, GraphicsLayer, Sketch, geometryEngine, graphicsUtils]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n      let view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-100, 38],\n        zoom: 4\n      }); // add searchbar \n\n      let search = new Search({\n        view: view\n      });\n      view.ui.add(search, \"top-right\"); // add a graphics layer\n\n      let graphicsLayer = new GraphicsLayer();\n      map.add(graphicsLayer); // Add the Sketch toolbar to draw polygons\n\n      let sketch = new Sketch({\n        view: view,\n        layer: graphicsLayer\n      });\n      view.ui.add(sketch, \"top-right\");\n      sketch.on(\"create\", function (event) {\n        if (event.state === \"complete\") {\n          var geometry = graphicsUtils.getGeometries(graphicsLayer);\n          let engine = geometryEngine.geodesicArea(geometry, \"square-meters\"); // let area = geoEngine.geodesicArea(event.graphic.geometry, \"square-meters\")\n\n          console.log(graphicsLayer);\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap esri\",\n      ref: this.mapRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Laura/Development/solar-calculator/src/components/WebMapView.js"],"names":["React","loadModules","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","css","then","ArcGISMap","MapView","Search","Graphic","GraphicsLayer","Sketch","geometryEngine","graphicsUtils","map","basemap","view","container","current","center","zoom","search","ui","add","graphicsLayer","sketch","layer","on","event","state","geometry","getGeometries","engine","geodesicArea","console","log","componentWillUnmount","render"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AAEA,OAAO,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcN,KAAK,CAACO,SAAN,EAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB;AACAP,IAAAA,WAAW,CAAC,CAAC,UAAD,EACV,oBADU,EAEV,qBAFU,EAGV,cAHU,EAIV,2BAJU,EAKV,qBALU,EAMV,8BANU,EAOV,oBAPU,CAAD,EAQR;AAAEQ,MAAAA,GAAG,EAAE;AAAP,KARQ,CAAX,CASCC,IATD,CASM,CAAC,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,aAAtC,EAAqDC,MAArD,EAA6DC,cAA7D,EAA6EC,aAA7E,CAAD,KAAiG;AACrG,YAAMC,GAAG,GAAG,IAAIR,SAAJ,CAAc;AACxBS,QAAAA,OAAO,EAAE;AADe,OAAd,CAAZ;AAIA,UAAIC,IAAI,GAAG,IAAIT,OAAJ,CAAY;AACrBU,QAAAA,SAAS,EAAE,KAAKhB,MAAL,CAAYiB,OADF;AAErBJ,QAAAA,GAAG,EAAEA,GAFgB;AAGrBK,QAAAA,MAAM,EAAE,CAAC,CAAC,GAAF,EAAO,EAAP,CAHa;AAIrBC,QAAAA,IAAI,EAAE;AAJe,OAAZ,CAAX,CALqG,CAYrG;;AACA,UAAIC,MAAM,GAAG,IAAIb,MAAJ,CAAW;AACtBQ,QAAAA,IAAI,EAAEA;AADgB,OAAX,CAAb;AAGAA,MAAAA,IAAI,CAACM,EAAL,CAAQC,GAAR,CAAYF,MAAZ,EAAoB,WAApB,EAhBqG,CAkBrG;;AACA,UAAIG,aAAa,GAAG,IAAId,aAAJ,EAApB;AACAI,MAAAA,GAAG,CAACS,GAAJ,CAAQC,aAAR,EApBqG,CAsBrG;;AACA,UAAIC,MAAM,GAAG,IAAId,MAAJ,CAAW;AACtBK,QAAAA,IAAI,EAAEA,IADgB;AAEtBU,QAAAA,KAAK,EAAEF;AAFe,OAAX,CAAb;AAKAR,MAAAA,IAAI,CAACM,EAAL,CAAQC,GAAR,CAAYE,MAAZ,EAAoB,WAApB;AAEAA,MAAAA,MAAM,CAACE,EAAP,CAAU,QAAV,EAAoB,UAASC,KAAT,EAAgB;AAClC,YAAIA,KAAK,CAACC,KAAN,KAAgB,UAApB,EAAgC;AAC9B,cAAIC,QAAQ,GAAGjB,aAAa,CAACkB,aAAd,CAA4BP,aAA5B,CAAf;AACA,cAAIQ,MAAM,GAAGpB,cAAc,CAACqB,YAAf,CAA4BH,QAA5B,EAAsC,eAAtC,CAAb,CAF8B,CAG9B;;AACFI,UAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AAA4B;AAC7B,OAND;AAQD,KA/CD;AAgDD;;AAGDY,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKpB,IAAT,EAAe;AACb;AACA,WAAKA,IAAL,CAAUC,SAAV,GAAsB,IAAtB;AACD;AACF;;AAEDoB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAE,KAAKpC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAvE6C","sourcesContent":["// Adapted from ArcGIS tutorials, including:\n//  \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\n// and \"Draw Graphics\" at https://developers.arcgis.com/labs/javascript/draw-graphics/\n\nimport React from 'react';\nimport { loadModules } from 'esri-loader';\n// import geometryService from '../scripts/geometryService'\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', \n      'esri/views/MapView', \n      'esri/widgets/Search',\n      \"esri/Graphic\",\n      \"esri/layers/GraphicsLayer\",\n      \"esri/widgets/Sketch\",\n      \"esri/geometry/geometryEngine\",\n      \"esri/graphicsUtils\"\n    ], { css: true })\n    .then(([ArcGISMap, MapView, Search, Graphic, GraphicsLayer, Sketch, geometryEngine, graphicsUtils]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n\n      let view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-100, 38],\n        zoom: 4\n      });\n      \n      // add searchbar \n      let search = new Search({\n        view: view\n      });\n      view.ui.add(search, \"top-right\");\n\n      // add a graphics layer\n      let graphicsLayer = new GraphicsLayer();\n      map.add(graphicsLayer)\n\n      // Add the Sketch toolbar to draw polygons\n      let sketch = new Sketch({\n        view: view,\n        layer: graphicsLayer\n      })\n\n      view.ui.add(sketch, \"top-right\")\n\n      sketch.on(\"create\", function(event) {\n        if (event.state === \"complete\") {\n          var geometry = graphicsUtils.getGeometries(graphicsLayer);\n          let engine = geometryEngine.geodesicArea(geometry, \"square-meters\")\n          // let area = geoEngine.geodesicArea(event.graphic.geometry, \"square-meters\")\n        console.log(graphicsLayer) }       \n      });\n      \n    });\n  }\n\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"webmap esri\" ref={this.mapRef} />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}