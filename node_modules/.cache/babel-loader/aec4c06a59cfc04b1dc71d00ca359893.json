{"ast":null,"code":"// Adapted from \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\nimport React from 'react';\nimport { loadModules } from 'esri-loader';\nimport geometryService from '../scripts/geometryService';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.state = {\n      stylePath: 'https://js.arcgis.com/3.31/esri/css/esri.css'\n    };\n  }\n\n  componentDidMount() {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', 'esri/views/MapView'], {\n      css: true\n    }).then(([ArcGISMap, MapView, Draw]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n      this.view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-118, 34],\n        zoom: 8\n      }); // map.onload = () => {\n      //   let tb = new Draw(map);\n      //   tb.on(\"draw-end\", lang.hitch(map, getAreaAndLength));\n      //   tb.activate(Draw.FREEHAND_POLYGON);\n      // };\n      // geometryService(map);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  } // render() {\n  //   return (\n  //     <div className=\"webmap\" ref={this.mapRef} />\n  //   );\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/Laura/Development/solar-calculator/src/components/WebMapView.js"],"names":["React","loadModules","geometryService","WebMapView","Component","constructor","props","mapRef","createRef","state","stylePath","componentDidMount","css","then","ArcGISMap","MapView","Draw","map","basemap","view","container","current","center","zoom","componentWillUnmount"],"mappings":"AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcP,KAAK,CAACQ,SAAN,EAAd;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB;AACAV,IAAAA,WAAW,CAAC,CAAC,UAAD,EAAa,oBAAb,CAAD,EAAqC;AAAEW,MAAAA,GAAG,EAAE;AAAP,KAArC,CAAX,CACCC,IADD,CACM,CAAC,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,CAAD,KAAgC;AACpC,YAAMC,GAAG,GAAG,IAAIH,SAAJ,CAAc;AACxBI,QAAAA,OAAO,EAAE;AADe,OAAd,CAAZ;AAIA,WAAKC,IAAL,GAAY,IAAIJ,OAAJ,CAAY;AACtBK,QAAAA,SAAS,EAAE,KAAKb,MAAL,CAAYc,OADD;AAEtBJ,QAAAA,GAAG,EAAEA,GAFiB;AAGtBK,QAAAA,MAAM,EAAE,CAAC,CAAC,GAAF,EAAO,EAAP,CAHc;AAItBC,QAAAA,IAAI,EAAE;AAJgB,OAAZ,CAAZ,CALoC,CAYpC;AACA;AACA;AACA;AACA;AACA;AACD,KAnBD;AAoBD;;AAGDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKL,IAAT,EAAe;AACb;AACA,WAAKA,IAAL,CAAUC,SAAV,GAAsB,IAAtB;AACD;AACF,GAtC6C,CAwC9C;AACA;AACA;AACA;AACA;;;AA5C8C","sourcesContent":["// Adapted from \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\n\nimport React from 'react';\nimport { loadModules } from 'esri-loader';\nimport geometryService from '../scripts/geometryService'\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.state = {stylePath: 'https://js.arcgis.com/3.31/esri/css/esri.css'};\n  }\n\n  componentDidMount() {\n\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', 'esri/views/MapView'], { css: true })\n    .then(([ArcGISMap, MapView, Draw]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n\n      this.view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-118, 34],\n        zoom: 8\n       \n      });\n      // map.onload = () => {\n      //   let tb = new Draw(map);\n      //   tb.on(\"draw-end\", lang.hitch(map, getAreaAndLength));\n      //   tb.activate(Draw.FREEHAND_POLYGON);\n      // };\n      // geometryService(map);\n    });\n  }\n\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n  // render() {\n  //   return (\n  //     <div className=\"webmap\" ref={this.mapRef} />\n  //   );\n  // }\n}"]},"metadata":{},"sourceType":"module"}