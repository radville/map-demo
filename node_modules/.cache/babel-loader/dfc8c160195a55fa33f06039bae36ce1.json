{"ast":null,"code":"var _jsxFileName = \"/Users/Laura/Development/solar-calculator/src/components/WebMapView.js\";\n// Adapted from \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\nimport React from 'react';\nimport { loadModules } from 'esri-loader'; // import geometryService from '../scripts/geometryService'\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.state = {\n      stylePath: 'https://js.arcgis.com/3.31/esri/css/esri.css'\n    };\n  }\n\n  componentDidMount() {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', 'esri/views/MapView', 'esri/widgets/Search', 'dojo/_base/lang', 'esri/toolbars/draw', \"esri/graphic\", \"esri/tasks/GeometryService\", \"esri/tasks/AreasAndLengthsParameters\", \"esri/symbols/SimpleFillSymbol\"], {\n      css: true\n    }).then(([ArcGISMap, MapView, Search, lang, Draw, Graphic, AreasAndLengthsParameters, SimpleFillSymbol]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n      let view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-118, 34],\n        zoom: 8\n      }); // add searchbar \n\n      let search = new Search({\n        view: view\n      });\n      view.ui.add(search, \"top-right\");\n      let draw = new Draw(map);\n      draw.on(\"draw-end\", lang.hitch(map, getAreaAndLength));\n      draw.activate(Draw.FREEHAND_POLYGON);\n\n      function getAreaAndLength(evtObj) {\n        let geometry = evtObj.geometry;\n        map.graphics.clear();\n        let graphic = map.graphics.add(new Graphic(geometry, new SimpleFillSymbol())); //setup the parameters for the areas and lengths operation\n\n        var areasAndLengthParams = new AreasAndLengthsParameters();\n        areasAndLengthParams.lengthUnit = GeometryService.UNIT_FOOT;\n        areasAndLengthParams.areaUnit = GeometryService.UNIT_ACRES;\n        areasAndLengthParams.calculationType = \"geodesic\";\n        geometryService.simplify([geometry], function (simplifiedGeometries) {\n          areasAndLengthParams.polygons = simplifiedGeometries;\n          geometryService.areasAndLengths(areasAndLengthParams);\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap\",\n      ref: this.mapRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Laura/Development/solar-calculator/src/components/WebMapView.js"],"names":["React","loadModules","WebMapView","Component","constructor","props","mapRef","createRef","state","stylePath","componentDidMount","css","then","ArcGISMap","MapView","Search","lang","Draw","Graphic","AreasAndLengthsParameters","SimpleFillSymbol","map","basemap","view","container","current","center","zoom","search","ui","add","draw","on","hitch","getAreaAndLength","activate","FREEHAND_POLYGON","evtObj","geometry","graphics","clear","graphic","areasAndLengthParams","lengthUnit","GeometryService","UNIT_FOOT","areaUnit","UNIT_ACRES","calculationType","geometryService","simplify","simplifiedGeometries","polygons","areasAndLengths","componentWillUnmount","render"],"mappings":"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","sourcesContent":["// Adapted from \"Using the ArcGIS API for JavaScript with React\"\n// found here: https://developers.arcgis.com/javascript/latest/guide/react/\n\nimport React from 'react';\nimport { loadModules } from 'esri-loader';\n// import geometryService from '../scripts/geometryService'\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.state = {stylePath: 'https://js.arcgis.com/3.31/esri/css/esri.css'};\n  }\n\n  componentDidMount() {\n\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/Map', 'esri/views/MapView', 'esri/widgets/Search', 'dojo/_base/lang', 'esri/toolbars/draw', \"esri/graphic\",\n    \"esri/tasks/GeometryService\",\n    \"esri/tasks/AreasAndLengthsParameters\",\n    \"esri/symbols/SimpleFillSymbol\" ], { css: true })\n    .then(([ArcGISMap, MapView, Search, lang, Draw, Graphic, AreasAndLengthsParameters, SimpleFillSymbol]) => {\n      const map = new ArcGISMap({\n        basemap: 'topo-vector'\n      });\n\n      let view = new MapView({\n        container: this.mapRef.current,\n        map: map,\n        center: [-118, 34],\n        zoom: 8\n      });\n      \n      // add searchbar \n      let search = new Search({\n        view: view\n      });\n      view.ui.add(search, \"top-right\");\n\n      let draw = new Draw(map);\n      draw.on(\"draw-end\", lang.hitch(map, getAreaAndLength));\n      draw.activate(Draw.FREEHAND_POLYGON);\n      \n      function getAreaAndLength(evtObj) {\n        let geometry = evtObj.geometry;\n        map.graphics.clear();\n        \n        let graphic = map.graphics.add(new Graphic(geometry, new SimpleFillSymbol()));\n        \n        //setup the parameters for the areas and lengths operation\n        var areasAndLengthParams = new AreasAndLengthsParameters();\n        areasAndLengthParams.lengthUnit = GeometryService.UNIT_FOOT;\n        areasAndLengthParams.areaUnit = GeometryService.UNIT_ACRES;\n        areasAndLengthParams.calculationType = \"geodesic\";\n        geometryService.simplify([geometry], function(simplifiedGeometries) {\n          areasAndLengthParams.polygons = simplifiedGeometries;\n          geometryService.areasAndLengths(areasAndLengthParams);\n        });\n      }\n      \n    });\n  }\n\n\n  componentWillUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"webmap\" ref={this.mapRef} />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}