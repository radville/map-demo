{"version":3,"file":"harness.mjs","sourceRoot":"","sources":["harness.ts"],"names":[],"mappings":"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","sourcesContent":["import assertRender from './support/assertRender';\nimport { decorateNodes, select } from './support/selector';\nimport { WNode, DNode, WidgetBaseInterface, Constructor, VNode } from '../widget-core/interfaces';\nimport { WidgetBase } from '../widget-core/WidgetBase';\n\nexport interface CustomComparator {\n\tselector: string;\n\tproperty: string;\n\tcomparator: (value: any) => boolean;\n}\n\nexport interface FunctionalSelector {\n\t(node: VNode | WNode): undefined | Function;\n}\n\nexport interface ExpectedRender {\n\t(): DNode | DNode[];\n}\n\nexport interface Expect {\n\t(expectedRenderFunc: ExpectedRender): void;\n\t(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender): void;\n}\n\nexport interface ExpectPartial {\n\t(selector: string, expectedRenderFunc: ExpectedRender): void;\n\t(selector: string, expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender): void;\n}\n\nexport interface Trigger {\n\t(selector: string, functionSelector: FunctionalSelector, ...args: any[]): any;\n\t(selector: string, functionSelector: string, ...args: any[]): any;\n}\n\nexport interface GetRender {\n\t(index?: number): DNode | DNode[];\n}\n\nexport interface HarnessAPI {\n\texpect: Expect;\n\texpectPartial: ExpectPartial;\n\ttrigger: Trigger;\n\tgetRender: GetRender;\n}\n\nexport function harness(\n\trenderFunc: () => WNode<WidgetBaseInterface>,\n\tcustomComparator: CustomComparator[] = []\n): HarnessAPI {\n\tlet invalidated = true;\n\tlet wNode = renderFunc();\n\tlet widget: WidgetBase;\n\tconst renderStack: (DNode | DNode[])[] = [];\n\tconst { properties, children } = wNode;\n\tconst widgetConstructor = wNode.widgetConstructor as Constructor<WidgetBase>;\n\tif (typeof widgetConstructor === 'function') {\n\t\twidget = new class extends widgetConstructor {\n\t\t\tinvalidate() {\n\t\t\t\tinvalidated = true;\n\t\t\t\tsuper.invalidate();\n\t\t\t}\n\t\t}();\n\t\twidget.__setProperties__(properties);\n\t\twidget.__setChildren__(children);\n\t\t_tryRender();\n\t} else {\n\t\tthrow new Error('Harness does not support registry items');\n\t}\n\n\tfunction _getRender(count?: number): DNode | DNode[] {\n\t\treturn count ? renderStack[count] : renderStack[renderStack.length - 1];\n\t}\n\n\tfunction _runCompares(nodes: DNode | DNode[], isExpected: boolean = false) {\n\t\tcustomComparator.forEach(({ selector, property, comparator }) => {\n\t\t\tconst items = select(selector, nodes);\n\t\t\titems.forEach((item: any, index: number) => {\n\t\t\t\tconst comparatorName = `comparator(selector=${selector}, ${property})`;\n\t\t\t\tif (item && item.properties && item.properties[property] !== undefined) {\n\t\t\t\t\tconst comparatorResult = comparator(item.properties[property])\n\t\t\t\t\t\t? comparatorName\n\t\t\t\t\t\t: `${comparatorName} FAILED`;\n\t\t\t\t\titem.properties[property] = isExpected ? comparatorName : comparatorResult;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction _tryRender() {\n\t\tconst { properties, children } = renderFunc();\n\t\twidget.__setProperties__(properties);\n\t\twidget.__setChildren__(children);\n\t\tif (invalidated) {\n\t\t\tconst render = widget.__render__();\n\t\t\tconst { hasDeferredProperties, nodes } = decorateNodes(render);\n\t\t\t_runCompares(nodes);\n\t\t\trenderStack.push(nodes);\n\t\t\tif (hasDeferredProperties) {\n\t\t\t\tconst { nodes: afterDeferredPropertiesNodes } = decorateNodes(render);\n\t\t\t\t_runCompares(afterDeferredPropertiesNodes);\n\t\t\t\trenderStack.push(afterDeferredPropertiesNodes);\n\t\t\t}\n\t\t\tinvalidated = false;\n\t\t}\n\t}\n\n\tfunction _expect(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender, selector?: string) {\n\t\tlet renderResult: DNode | DNode[];\n\t\tif (actualRenderFunc === undefined) {\n\t\t\t_tryRender();\n\t\t\trenderResult = _getRender();\n\t\t} else {\n\t\t\trenderResult = actualRenderFunc();\n\t\t}\n\n\t\tconst { nodes: expectedRenderResult } = decorateNodes(expectedRenderFunc());\n\t\t_runCompares(expectedRenderResult, true);\n\t\tif (selector) {\n\t\t\tconst [firstItem] = select(selector, renderResult);\n\t\t\tassertRender(firstItem, expectedRenderResult);\n\t\t} else {\n\t\t\tassertRender(renderResult, expectedRenderResult);\n\t\t}\n\t}\n\n\treturn {\n\t\texpect(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender) {\n\t\t\treturn _expect(expectedRenderFunc, actualRenderFunc);\n\t\t},\n\t\texpectPartial(selector: string, expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender) {\n\t\t\treturn _expect(expectedRenderFunc, actualRenderFunc, selector);\n\t\t},\n\t\ttrigger(selector: string, functionSelector: string | FunctionalSelector, ...args: any[]): any {\n\t\t\t_tryRender();\n\t\t\tconst [firstItem] = select(selector, _getRender());\n\t\t\tif (firstItem) {\n\t\t\t\tlet triggerFunction: Function | undefined;\n\t\t\t\tif (typeof functionSelector === 'string') {\n\t\t\t\t\ttriggerFunction = (firstItem.properties as any)[functionSelector];\n\t\t\t\t} else {\n\t\t\t\t\ttriggerFunction = functionSelector(firstItem);\n\t\t\t\t}\n\t\t\t\tif (triggerFunction) {\n\t\t\t\t\treturn triggerFunction.apply(widget, args);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetRender(index?: number): DNode | DNode[] {\n\t\t\treturn _getRender(index);\n\t\t}\n\t};\n}\n\nexport default harness;\n"]}