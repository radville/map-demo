import { DNode, DefaultWidgetBaseInterface, WNode, VNode } from '../../widget-core/interfaces';
export declare type TestFunction = (elem: DNode<DefaultWidgetBaseInterface>) => boolean;
export interface DecoratorResult<T> {
    hasDeferredProperties: boolean;
    nodes: T;
}
export declare function decorateNodes(dNode: DNode[]): DecoratorResult<DNode[]>;
export declare function decorateNodes(dNode: DNode): DecoratorResult<DNode>;
export declare function decorateNodes(dNode: DNode | DNode[]): DecoratorResult<DNode | DNode[]>;
export declare const parseSelector: (selector: string) => string;
export declare const adapter: any;
export declare function select(selector: string, nodes: DNode | DNode[]): (WNode | VNode)[];
export default select;
