(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "../../core/Destroyable", "../../shim/Map", "../../shim/WeakMap"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var Destroyable_1 = require("../../core/Destroyable");
    var Map_1 = require("../../shim/Map");
    var WeakMap_1 = require("../../shim/WeakMap");
    var Block = /** @class */ (function (_super) {
        tslib_1.__extends(Block, _super);
        function Block(properties) {
            var _this = _super.call(this) || this;
            _this._moduleMap = new WeakMap_1.default();
            _this._invalidate = properties.invalidate;
            return _this;
        }
        Block.prototype.run = function (module) {
            var _this = this;
            var decoratedModule = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var argsString = JSON.stringify(args);
                var valueMap = _this._moduleMap.get(module);
                if (valueMap) {
                    var cachedValue = valueMap.get(argsString);
                    if (cachedValue !== undefined) {
                        return cachedValue;
                    }
                }
                var result = module.apply(void 0, tslib_1.__spread(args));
                if (result && typeof result.then === 'function') {
                    result.then(function (result) {
                        if (!valueMap) {
                            valueMap = new Map_1.default();
                            _this._moduleMap.set(module, valueMap);
                        }
                        valueMap.set(argsString, result);
                        _this._invalidate();
                    });
                    return null;
                }
                return result;
            };
            return decoratedModule;
        };
        return Block;
    }(Destroyable_1.Destroyable));
    exports.Block = Block;
    exports.default = Block;
});
//# sourceMappingURL=Block.js.map