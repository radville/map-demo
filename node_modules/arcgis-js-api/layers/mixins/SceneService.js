// COPYRIGHT Â© 2019 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.14/esri/copyright.txt for details.

//  copyright

/**
                 * The copyright text as defined by the scene service.
                 *
                 * @memberof module:esri/layers/mixins/SceneService
                 * @name copyright
                 * @type {string}
                 */

define(["require","exports","../../core/tsSupport/declareExtendsHelper","../../core/tsSupport/decorateHelper","../../core/tsSupport/generatorHelper","../../core/tsSupport/awaiterHelper","../../request","../../core/Error","../../core/Logger","../../core/promiseUtils","../../core/urlUtils","../../core/accessorSupport/decorators","../../geometry/Extent","../../geometry/HeightModelInfo","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties"],function(e,t,r,o,n,i,a,l,s,p,u,c,d,y,h,f,v){Object.defineProperty(t,"__esModule",{value:!0});var m=s.getLogger("esri.layers.mixins.SceneService");t.SceneService=function(e){return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.blendMode=null,t.spatialReference=null,t.fullExtent=null,t.heightModelInfo=null,t.minScale=0,t.maxScale=0,t.version={major:Number.NaN,minor:Number.NaN,versionString:""},t.copyright=null,t.sublayerTitleMode="item-title",t.title=null,t.layerId=null,t}return r(t,e),t.prototype.readSpatialReference=function(e,t){return this._readSpatialReference(t)},t.prototype._readSpatialReference=function(e){if(null!=e.spatialReference)return h.fromJSON(e.spatialReference);var t=e.store,r=t.indexCRS||t.geographicCRS,o=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=o?new h(o):null},t.prototype.readFullExtent=function(e,t){var r=t.store,o=this._readSpatialReference(t);return null==o||null==r||null==r.extent||!Array.isArray(r.extent)||r.extent.some(function(e){return e<g})?null:new d({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:o})},t.prototype.readVersion=function(e,t){var r=t.store,o=null!=r.version?r.version.toString():"",n={major:Number.NaN,minor:Number.NaN,versionString:o},i=o.split(".");return i.length>=2&&(n.major=parseInt(i[0],10),n.minor=parseInt(i[1],10)),n},t.prototype.readTitlePortalItem=function(e){return"item-title"!==this.sublayerTitleMode?void 0:e},t.prototype.readTitleService=function(e,t){var r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return f.titleFromUrlAndName(this.url,t.name);var o=t.name||f.parse(this.url).title;return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(o=r+" - "+o),f.cleanTitle(o)},t.prototype.readLayerId=function(e,t){return t.id},Object.defineProperty(t.prototype,"url",{set:function(e){var t=f.sanitizeUrlWithLayerId(this,e,m);this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)},enumerable:!0,configurable:!0}),t.prototype.writeUrl=function(e,t,r,o){f.writeUrlWithLayerId(this,e,"layers",t,o)},Object.defineProperty(t.prototype,"parsedUrl",{get:function(){var e=this._get("url");if(!e)return null;var t=u.urlToObject(e);return null!=this.layerId&&f.isArcGISUrl(t.path)&&(t.path=t.path+"/layers/"+this.layerId),t},enumerable:!0,configurable:!0}),t.prototype._verifyRootNodeAndUpdateExtent=function(e,t){return i(this,void 0,void 0,function(){var r,o,i,a;return n(this,function(n){switch(n.label){case 0:if(!e)return[3,4];n.label=1;case 1:return n.trys.push([1,3,,4]),r=this._updateExtentFromRootPage,o=[e],[4,this._fetchRootPage(e,t)];case 2:return[2,r.apply(this,o.concat([n.sent()]))];case 3:return i=n.sent(),[3,4];case 4:return a=this._updateExtentFromRootNode,[4,this._fetchRootNode(t)];case 5:return[2,a.apply(this,[n.sent()])]}})})},t.prototype._fetchRootPage=function(e,t){return i(this,void 0,void 0,function(){var r,o,i;return n(this,function(n){switch(n.label){case 0:return e?(r=Math.floor(e.rootIndex/e.nodesPerPage),o=this.parsedUrl.path+"/nodepages/"+r,[4,a(o,{responseType:"json",signal:t})]):[2,p.reject()];case 1:return i=n.sent(),[2,i.data]}})})},t.prototype._updateExtentFromRootPage=function(e,t){if(null==t||null==t.nodes)throw new l("sceneservice:invalid-node-page","Inavlid node page.");var r=t.nodes[e.rootIndex%e.nodesPerPage];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new l("sceneservice:invalid-node-page","Inavlid node page.");var o=r.obb.halfSize,n=r.obb.center[2],i=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);this.fullExtent.zmin=n-i,this.fullExtent.zmax=n+i},t.prototype._updateExtentFromRootNode=function(e){if(null!=this.fullExtent&&!this.fullExtent.hasZ&&null!=e&&Array.isArray(e.mbs)&&4===e.mbs.length){var t=e.mbs[2],r=e.mbs[3];this.fullExtent.zmin=t-r,this.fullExtent.zmax=t+r}},t.prototype._fetchRootNode=function(e){return i(this,void 0,void 0,function(){var t,r,o;return n(this,function(n){switch(n.label){case 0:if(!this.rootNode)return[2];t=u.join(this.parsedUrl.path,this.rootNode),n.label=1;case 1:return n.trys.push([1,3,,4]),[4,a(t,{query:{f:"json"},responseType:"json",signal:e})];case 2:return r=n.sent(),[2,r.data];case 3:throw o=n.sent(),new l("sceneservice:root-node-missing","Root node missing.",{error:o,url:t});case 4:return[2]}})})},t.prototype._fetchService=function(e){return i(this,void 0,void 0,function(){var t;return n(this,function(r){switch(r.label){case 0:return null==this.layerId&&/SceneServer\/*$/i.test(this.url)?[4,this._fetchFirstLayerId(e)]:[3,2];case 1:t=r.sent(),null!=t&&(this.layerId=t),r.label=2;case 2:return[2,this._fetchServiceLayer(e)]}})})},t.prototype._fetchFirstLayerId=function(e){return i(this,void 0,void 0,function(){var t;return n(this,function(r){switch(r.label){case 0:return[4,a(this.url,{query:{f:"json"},responseType:"json",signal:e})];case 1:return t=r.sent(),t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0?[2,t.data.layers[0].id]:[2,void 0]}})})},t.prototype._fetchServiceLayer=function(e){return i(this,void 0,void 0,function(){var t,r;return n(this,function(o){switch(o.label){case 0:return[4,a(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:e})];case 1:return t=o.sent(),t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),r=t.data,this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r),[2]}})})},t.prototype.validateLayer=function(e){},o([c.shared({id:{json:{origins:{service:{read:!1},"portal-item":{read:!1}}}}})],t.prototype,"properties",void 0),o([c.property({type:h})],t.prototype,"spatialReference",void 0),o([c.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readSpatialReference",null),o([c.property({type:d})],t.prototype,"fullExtent",void 0),o([c.reader("fullExtent",["store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readFullExtent",null),o([c.property({readOnly:!0,type:y})],t.prototype,"heightModelInfo",void 0),o([c.property({type:Number,json:{read:{source:"layerDefinition.minScale"},write:{target:"layerDefinition.minScale"},origins:{service:{read:{source:"minScale"},write:!1}}}})],t.prototype,"minScale",void 0),o([c.property({type:Number,json:{read:{source:"layerDefinition.maxScale"},write:{target:"layerDefinition.maxScale"},origins:{service:{read:{source:"maxScale"},write:!1}}}})],t.prototype,"maxScale",void 0),o([c.property({readOnly:!0})],t.prototype,"version",void 0),o([c.reader("version",["store.version"])],t.prototype,"readVersion",null),o([c.property({type:String,json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),o([c.property({type:String,json:{read:!1}})],t.prototype,"sublayerTitleMode",void 0),o([c.property({type:String})],t.prototype,"title",void 0),o([c.reader("portal-item","title")],t.prototype,"readTitlePortalItem",null),o([c.reader("service","title",["name"])],t.prototype,"readTitleService",null),o([c.property({type:Number})],t.prototype,"layerId",void 0),o([c.reader("service","layerId",["id"])],t.prototype,"readLayerId",null),o([c.property(v.url)],t.prototype,"url",null),o([c.writer("url")],t.prototype,"writeUrl",null),o([c.property({dependsOn:["layerId"]})],t.prototype,"parsedUrl",null),o([c.property({readOnly:!0})],t.prototype,"store",void 0),o([c.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],t.prototype,"rootNode",void 0),t=o([c.subclass("esri.layers.mixins.SceneService")],t)}(c.declared(e))};var g=-1e38});