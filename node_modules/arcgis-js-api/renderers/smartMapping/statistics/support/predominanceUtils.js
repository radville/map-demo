// COPYRIGHT Â© 2019 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.14/esri/copyright.txt for details.

define(["require","exports"],function(n,e){function a(n){return"("+n.map(function(n){return n+" >= 0"}).join(" OR ")+")"}function r(n){return{expression:l(n,{returnFieldName:!0,defaultValue:"'"+e.noDominantCategoryField+"'"})}}function l(n,e){var a=e.returnFieldName,r=e.defaultValue,l=e.integerFields,u=[];if(a&&r){var t=n.map(function(n){return n+" <= 0"}).join(" AND ");u.push("WHEN "+t+" THEN "+r)}for(var i=0,o=n;i<o.length;i++){var s=o[i];!function(e){var r=n.reduce(function(n,a){return e!==a&&n.push(e+" > "+a),n},[]).join(" AND "),t=a&&"'"+e+"'"||(l&&l.indexOf(e)>-1?"cast("+e+" as float)":e);u.push("WHEN "+r+" THEN "+t)}(s)}return"CASE "+u.join(" ")+" ELSE "+(r||"0")+" END"}function u(n,e){var r=e.filter(function(e){return c.indexOf(n.getField(e).type)>-1}),u=e.join(" + "),t={sqlExpression:"("+u+")",sqlWhere:a(e)},i=l(e,{integerFields:r}),s={sqlExpression:"(( ("+i+") / ("+u+") ) * 100)",sqlWhere:a(e)+" AND (("+u+") > 0)"};return{predominantCategory:{valueExpression:o(e)},size:{valueExpression:d(e),statisticsQuery:t,histogramQuery:t},opacity:{valueExpression:m(e),statisticsQuery:s,histogramQuery:s}}}function t(n){return n&&n.map(function(n){return'$feature["'+n+'"];'}).join("\n")+"\n"||""}function i(n,e){void 0===e&&(e=!1);var a=n.map(function(n){return'"'+n+'"'});return"\n  var fieldNames = [ "+a.join(", ")+" ];\n  var numFields = "+a.length+";\n  var maxValueField = null;\n  var maxValue = -Infinity;\n  var value, i, totalValue = null;\n\n  for(i = 0; i < numFields; i++) {\n    value = $feature[fieldNames[i]];\n\n    if(value > 0) {\n      if(value > maxValue) {\n        maxValue = value;\n        maxValueField = fieldNames[i];\n      }\n      else if (value == maxValue) {\n        maxValueField = null;\n      }\n    }\n    "+(e?"\n  if(value != null && value >= 0) {\n    if (totalValue == null) { totalValue = 0; }\n    totalValue = totalValue + value;\n  }\n  ":"")+"\n  }\n  "}function o(n){var e=i(n);return"\n  "+t(n)+"\n  "+e+"\n  return maxValueField;\n  "}function s(n){var e=i(n);return"\n  "+t(n)+"\n  "+e+"\n  return maxValue;\n  "}function f(n){var e=n.map(function(n){return n.fieldName}),a=t(e),r=e.map(function(n){return'"'+n+'"'}),l=n.map(function(n){return n.label?'"'+n.label+'"':'"'+n.fieldName+'"'});return"\n  "+a+"\n  var fieldNames = [ "+r.join(", ")+" ];\n  var fieldAliases = [ "+l.join(", ")+" ];\n  var numFields = "+r.length+';\n  var maxFieldAlias = null;\n  var maxValue = -Infinity;\n  var value, i, totalValue = null;\n\n  for(i = 0; i < numFields; i++) {\n    value = $feature[fieldNames[i]];\n\n    if(value > 0) {\n      if(value > maxValue) {\n        maxValue = value;\n        maxFieldAlias = fieldAliases[i];\n      }\n      else if (value == maxValue) {\n        maxFieldAlias = "Tie";\n      }\n    }\n  }\n  return maxFieldAlias;\n  '}function v(n){return"\n  "+t(n)+"\n  var fieldValues = [ "+n.map(function(n){return'$feature["'+n+'"]'}).join(", ")+" ];\n  var totalValue = Sum(fieldValues);\n  var order = Reverse(Sort(fieldValues));\n  return IIF(totalValue > 0, Round(((order[0] - order[1]) / totalValue) * 100, 2), null);\n  "}function d(n){var e=t(n),a=n.map(function(n){return'"'+n+'"'});return"\n  "+e+"\n  var fieldNames = [ "+a.join(", ")+" ];\n  var numFields = "+a.length+";\n  var value, i, totalValue = null;\n\n  for(i = 0; i < numFields; i++) {\n    value = $feature[fieldNames[i]];\n\n    if(value != null && value >= 0) {\n      if (totalValue == null) { totalValue = 0; }\n      totalValue = totalValue + value;\n    }\n  }\n\n  return totalValue;\n  "}function m(n){var e=i(n,!0);return"\n  "+t(n)+"\n  "+e+"\n\n  var strength = null;\n\n  if (maxValueField != null && totalValue > 0) {\n    strength = (maxValue / totalValue) * 100;\n  }\n\n  return strength;\n  "}function p(n){return"\n  "+t(n.map(function(n){return n.fieldName}))+"\n  var groups = [ "+n.map(function(n){return'{\n    value: $feature["'+n.fieldName+'"],\n    alias: "'+(n.label||n.fieldName)+'"\n    }'}).join(", ")+' ];\n  var numTopValues = Count(groups);\n\n  function getValuesArray(arr){\n    var valuesArray = []\n    for(var i in arr){\n      valuesArray[i] = arr[i].value;\n    }\n    return valuesArray;\n  }\n\n  function findAliases(top5Array, fullArray){\n    var aliases = [];\n    var found = "";\n    for(var i in top5Array){\n      for(var k in fullArray){\n        if(top5Array[i] == fullArray[k].value && Find(fullArray[k].alias, found) == -1){\n          found += fullArray[k].alias;\n          aliases[Count(aliases)] = {\n            alias: fullArray[k].alias,\n            value: top5Array[i]\n          };\n        }\n      }\n    }\n    return aliases;\n  }\n\n  function getTopGroups(groupsArray){\n    var values = getValuesArray(groupsArray);\n    var top5Values = IIF(Max(values) > 0, Top(Reverse(Sort(values)),numTopValues), "no data");\n    var top5Aliases = findAliases(top5Values,groupsArray);\n\n    if(TypeOf(top5Values) == "String"){\n      return top5Values;\n    } else {\n      var content = "";\n      for(var i in top5Aliases){\n        if(top5Aliases[i].value > 0){\n          content += (i+1) + ". " + top5Aliases[i].alias + " (" + Text(top5Aliases[i].value, "#,###") + ")";\n          content += IIF(i < numTopValues-1, TextFormatting.NewLine, "");\n        }\n      }\n    }\n\n    return content;\n  }\n\n  getTopGroups(groups);\n  '}Object.defineProperty(e,"__esModule",{value:!0});var c=["integer","small-integer"];e.noDominantCategoryField="no_dominant_category",e.getSQLForPredominantCategoryName=r,e.getPredominanceExpressions=u,e.getArcadeForPredominantCategory=o,e.getArcadeForPredominantCategoryValue=s,e.getArcadeForPredominantCategoryAlias=f,e.getArcadeForPredominanceMargin=v,e.getArcadeForSumOfFields=d,e.getArcadeForStrengthOfPredominance=m,e.getArcadeForOrderedFields=p});