// COPYRIGHT Â© 2019 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.14/esri/copyright.txt for details.

define(["require","exports","../../../../core/maybe","../../../../core/screenUtils","../../../../core/libs/gl-matrix-2/vec3","../../../../core/libs/gl-matrix-2/vec3f64","../../support/geometryUtils","../../support/stack","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/intersectorUtils"],function(e,t,r,i,n,a,s,o,c,l){function d(e,t,r){for(var i=0,n=e;i<n.length;i++){var a=n[i];t&&!t(a)||r.push(a)}return r}function u(e){return h||(h=new c(e)),h.viewingMode=e,h}Object.defineProperty(t,"__esModule",{value:!0});var v=function(){function e(e,t,r){this.viewingMode=e,this.layerProvider=t,this.view=r,this.tmpRay=s.ray.create(),this.externalIntersectionHandlers=new Set,this.tolerance=c.DEFAULT_TOLERANCE,this.validateHUDIntersector=new c(this.viewingMode),this.validateHUDIntersector.options.hud=!1}return e.prototype.intersectScreen=function(e,t){return this.intersectRay(this.getPickRay(e,this.tmpRay),u(this.viewingMode),t)},e.prototype.intersectScreenFreePointFallback=function(e,t){return this.intersectRayFreePointFallback(this.getPickRay(e,this.tmpRay),t)},e.prototype.intersectRayFreePointFallback=function(e,t){return this.intersectRay(e,u(this.viewingMode),t)||this.intersectRayFreePointLocal(e,t)},e.prototype.intersectRay=function(e,t,r,i){return t.options.selectionMode=!1,t.options.store=0,this.computeIntersection(e,t,i),!!t.results.min&&t.results.min.getIntersectionPoint(r)},e.prototype.getCenterRayWithSubpixelOffset=function(e,t,r,i){return void 0===r&&(r=.5),void 0===i&&(i=.5),e.getRenderCenter(f,r,i),f[0]+=.0466,f[1]-=.0123,s.ray.fromRenderAtEye(e,f,t)},e.prototype.intersectIntersectorScreen=function(e,t,r){this.computeIntersection(this.getPickRay(e,this.tmpRay),t,r)},e.prototype.intersectToolIntersectorScreen=function(e,t,r){var i=this.getPickRay(e,this.tmpRay);this.intersectToolIntersectorRay(i,t,r)},e.prototype.intersectToolIntersectorRay=function(e,t,r){t.options.selectionMode=!0,this.computeIntersection(e,t,r);var i=t.results.min;!!this.view.basemapTerrain&&this.view.basemapTerrain.isOpaque()||i.hasIntersectionPoint&&"TerrainRenderer"!==i.intersector||(t.options.selectionMode=!1,this.computeIntersection(e,t,r))},e.prototype.setTolerance=function(e){void 0===e&&(e=c.DEFAULT_TOLERANCE),this.tolerance=e},e.prototype.addIntersectionHandler=function(e){this.externalIntersectionHandlers.add(e)},e.prototype.removeIntersectionHandler=function(e){this.externalIntersectionHandlers.delete(e)},e.prototype.getPickRay=function(e,t){void 0===t&&(t=s.ray.create());var r=this.view.state.camera;return s.ray.fromScreen(r,e,t)},e.prototype.intersectRayFreePointLocal=function(e,t){if("local"!==this.viewingMode)return!1;var r=this.view.dataExtent,i={x:r.xmax-r.xmin,y:r.ymax-r.ymin,z:8*Math.max(r.xmax-r.xmin,r.ymax-r.ymin)},a=Math.max(i.x,i.y,i.z);if(0===a)return n.vec3.add(t,e.origin,n.vec3.normalize(o.sv3d.get(),e.direction)),!0;var s=this.view.state.camera,c=Math.max(0,r.xmin-s.eye[0],s.eye[0]-r.xmax),l=Math.max(0,r.ymin-s.eye[1],s.eye[1]-r.ymax),d=Math.sqrt(c*c+l*l),u=Math.abs(s.relativeElevation)+Number.MIN_VALUE,v=Math.pow(Math.max(0,Math.log(a/u)),2),h=a/Math.max(1,v);h=Math.max(h,Math.min(d,a));var p=n.vec3.scale(o.sv3d.get(),e.direction,h/n.vec3.length(e.direction));return n.vec3.add(t,e.origin,p),!0},e.prototype.intersectElevationFromScreen=function(e,t,r){return void 0===r&&(r=0),this.intersectElevation(this.getPickRay(e,this.tmpRay),t,r)},e.prototype.intersectElevation=function(e,t,r){if(void 0===r&&(r=0),"absolute"===t)return this.view.computeMapPointFromVec3d(this.view.renderCoordsHelper.intersectManifoldClosestSilhouette(e,r,y));var a=this.view.state.camera,s=i.castRenderScreenPointArray3(o.sv3d.get());a.projectPoint(e.origin,s);var d=this.prepareFilters(null,p),u=this.view.slicePlane,v=u?l.sliceFilterPredicate(u):null,h=new c(this.viewingMode);h.options.store=0;var f=e.origin;if(0!==r){var g=r/this.view.renderCoordsHelper.unitInMeters;"local"===this.viewingMode?f=n.vec3.set(o.sv3d.get(),e.origin[0],e.origin[1],e.origin[2]-g):m&&m.offset===r?h.options.verticalOffset=m.verticalOffset:(m={offset:r,verticalOffset:new l.VerticalOffsetForGlobalViewingMode(r)},h.options.verticalOffset=m.verticalOffset)}var R=n.vec3.add(o.sv3d.get(),f,e.direction);switch(h.reset(f,R),h.point=s,h.camera=a,h.filterPredicate=null,t){case"scene":var I=function(e){return e.metadata&&e.metadata.isElevationSource};h.intersect(d.layers,s,a,this.tolerance,null,I),this.externalIntersectionHandlers.forEach(function(e){if("I3S"===e.type||"Terrain"===e.type){var t=e.slicePlaneEnabled?v:null;e.intersect(h,t,f,R,s)}});break;case"ground":this.externalIntersectionHandlers.forEach(function(e){if("Terrain"===e.type){var t=e.slicePlaneEnabled?v:null;e.intersect(h,t,f,R,s)}})}var P=h.results.min;if(P.getIntersectionPoint(y)){var w=this.view.computeMapPointFromVec3d(y),x=this.view.basemapTerrain;return"TerrainRenderer"===P.intersector&&x&&(w.z=x.getElevation(w)||0,w.z+=r),w}return null},e.prototype.computeIntersection=function(e,t,r){var a=this,s=this.view.state.camera,c=i.castRenderScreenPointArray3(o.sv3d.get());s.projectPoint(e.origin,c);var d=this.prepareFilters(r,p);t.options.storeTerrainResults=d.filterLayerUid(l.TERRAIN_ID),t.options.selectOpaqueTerrainOnly=!r||!("include"in r||"exclude"in r);var u=e.origin,v=n.vec3.add(o.sv3d.get(),e.origin,e.direction);t.reset(u,v),t.intersect(d.layers,c,s,this.tolerance);var h=this.view.slicePlane,y=h?l.sliceFilterPredicate(h):null;t.intersect(d.sliceableLayers,c,s,this.tolerance,y);var f=r&&(r.terrainLocationFeedbackEnabled||r.enableDraped);this.externalIntersectionHandlers.forEach(function(e){if(e.intersectionHandlerId===l.TERRAIN_ID){if(!f&&!d.filterLayerUid(l.TERRAIN_ID))return}else if(!d.filterLayerUid(e.intersectionHandlerId))return;var r=e.slicePlaneEnabled?y:null;e.intersect(t,r,u,v,c)});var m=o.sv3d.get();if(r&&r.enableDraped&&t.results.terrain.getIntersectionPoint(m)){var g=this.view._stage.renderView.getDrapedRenderer(),R=o.sv3d.get();this.view.renderCoordsHelper.fromRenderCoords(m,R,this.view.spatialReference),R[2]=this.view.basemapTerrain.getElevation(m)||0,g.intersect(t,R,d.filterRenderGeometry)}t.sortResults();var I=t.results.hud;if(I.hasIntersectionPoint){var P=i.castRenderScreenPointArray3(o.sv3d.get()),w=o.sv3d.get(),x=o.sv3d.get();this.unprojectHUDResultRay(I.center,P,w,x);var b=n.vec3.distance(I.center,w)/n.vec3.distance(w,x)*.99;this.validateHUDIntersector.reset(w,x),this.validateHUDIntersector.intersect(d.layers,P,s,this.tolerance),this.validateHUDIntersector.intersect(d.sliceableLayers,P,s,this.tolerance,y),this.externalIntersectionHandlers.forEach(function(e){if(d.filterLayerUid(e.intersectionHandlerId)){var t=e.slicePlaneEnabled?y:null;e.intersect(a.validateHUDIntersector,t,w,x,P)}});var M=this.validateHUDIntersector.results.min;(null==M.dist||b<=M.dist)&&(t.results.min.copyFrom(I),t.results.all.splice(0,0,I))}},e.prototype.prepareFilters=function(e,t){var r=[],i=[];return this.layerProvider.forEachLayer(function(e){e.isPickable&&(e.isSliceable?i:r).push(e)}),t.include=e&&e.include,t.exclude=e&&e.exclude,t.layers.length=0,t.sliceableLayers.length=0,d(r,t.filterLayer,t.layers),d(i,t.filterLayer,t.sliceableLayers),t},e.prototype.unprojectHUDResultRay=function(e,t,r,n){var a=this.view.state.camera;a.projectPoint(e,t);var s=i.castRenderScreenPointArray3(o.sv3d.get());s[0]=t[0],s[1]=t[1],s[2]=0,a.unprojectPoint(s,r),s[2]=1,a.unprojectPoint(s,n)},e}();t.SceneIntersectionHelper=v;var h,p={include:null,exclude:null,layers:[],sliceableLayers:[],filterLayer:function(e){return p.filterLayerUid(e.apiLayerUid)},filterLayerUid:function(e){var t=p.include,i=p.exclude;return r.isNone(e)?null==t&&null==i:(null==t||t.has(e))&&(null==i||!i.has(e))},filterRenderGeometry:function(e){return p.filterLayerUid(e.data.layerUid)}},y=a.vec3f64.create(),f=i.createRenderScreenPointArray(),m=null});