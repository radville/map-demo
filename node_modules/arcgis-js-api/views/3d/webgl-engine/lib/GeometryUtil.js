// COPYRIGHT Â© 2019 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.14/esri/copyright.txt for details.

define(["require","exports","../../../../core/libs/gl-matrix-2/vec3","../../../../core/libs/gl-matrix-2/vec3f32","../../../../core/libs/gl-matrix-2/vec3f64","../../support/geometryUtils","./BufferVectorMath","./GeometryData","./Util"],function(t,e,r,a,n,o,s,c,v){var l,i=s.Vec3Compact;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(24),r=0;r<8;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var i={};i[v.VertexAttrConstants.POSITION]=new Uint32Array(s),i[v.VertexAttrConstants.NORMAL]=new Uint32Array(l),i[v.VertexAttrConstants.UV0]=new Uint32Array(f);var A={};return A[v.VertexAttrConstants.POSITION]={size:3,data:e},A[v.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(n)},A[v.VertexAttrConstants.UV0]={size:2,data:new Float32Array(o)},new c.GeometryData(A,i)}for(var r=.5,a=[[-r,-r,r],[r,-r,r],[r,r,r],[-r,r,r],[-r,-r,-r],[r,-r,-r],[r,r,-r],[-r,r,-r]],n=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],o=[0,0,1,0,1,1,0,1],s=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],l=new Array(36),i=0;i<6;i++)for(var A=0;A<6;A++)l[6*i+A]=i;for(var f=new Array(36),i=0;i<6;i++)f[6*i+0]=0,f[6*i+1]=1,f[6*i+2]=2,f[6*i+3]=2,f[6*i+4]=3,f[6*i+5]=0;t.createGeometry=e}(l||(l={}));var A;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(18),r=0;r<6;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var l={};l[v.VertexAttrConstants.POSITION]=new Uint32Array(o),l[v.VertexAttrConstants.NORMAL]=new Uint32Array(s);var i={};return i[v.VertexAttrConstants.POSITION]={size:3,data:e},i[v.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(n)},new c.GeometryData(i,l)}var r=.5,a=[[-r,0,-r],[r,0,-r],[r,0,r],[-r,0,r],[0,-r,0],[0,r,0]],n=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],o=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],s=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];t.createGeometry=e}(A||(A={}));var f;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(12),r=0;r<4;r++)e[3*r]=u[r][0]*t[0],e[3*r+1]=u[r][1]*t[1],e[3*r+2]=u[r][2]*t[2];var a={};a[v.VertexAttrConstants.POSITION]=new Uint32Array(O),a[v.VertexAttrConstants.NORMAL]=new Uint32Array(h);var n={};return n[v.VertexAttrConstants.POSITION]={size:3,data:e},n[v.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(m)},new c.GeometryData(n,a)}var n=.5,o=a.vec3f32.fromValues(-n,0,-n),s=a.vec3f32.fromValues(n,0,-n),l=a.vec3f32.fromValues(0,0,n),i=a.vec3f32.fromValues(0,.5,0),A=a.vec3f32.create(),f=a.vec3f32.create(),y=a.vec3f32.create(),V=a.vec3f32.create(),d=a.vec3f32.create();r.vec3.subtract(A,o,i),r.vec3.subtract(f,o,s),r.vec3.cross(y,A,f),r.vec3.normalize(y,y),r.vec3.subtract(A,s,i),r.vec3.subtract(f,s,l),r.vec3.cross(V,A,f),r.vec3.normalize(V,V),r.vec3.subtract(A,l,i),r.vec3.subtract(f,l,o),r.vec3.cross(d,A,f),r.vec3.normalize(d,d);var u=[o,s,l,i],m=[0,-1,0,y[0],y[1],y[2],V[0],V[1],V[2],d[0],d[1],d[2]],O=[0,1,2,3,1,0,3,2,1,3,0,2],h=[0,0,0,1,1,1,2,2,2,3,3,3];t.createGeometry=e}(f||(f={}));var y;!function(t){function e(t,e,r,a,n,o,s){t=t||50,a=void 0!==a?a:-Math.PI,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:.5*-Math.PI,s=void 0!==s?s:Math.PI;for(var l=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(r)||6),A=(l+1)*(i+1),f=new Float32Array(3*A),y=new Float32Array(3*A),V=new Float32Array(2*A),d=[],u=0,m=0;m<=i;m++){for(var O=[],h=m/i,x=o+h*s,C=Math.cos(x),w=0;w<=l;w++){var I=w/l,g=a+I*n,M=Math.cos(g)*C,z=Math.sin(x),N=-Math.sin(g)*C;f[3*u]=M*t,f[3*u+1]=z*t,f[3*u+2]=N*t,y[3*u]=M,y[3*u+1]=z,y[3*u+2]=N,V[2*u]=I,V[2*u+1]=h,O.push(u),++u}d.push(O)}var P=new Uint32Array(2*l*(i-1)*3);u=0;for(var m=0;m<i;m++)for(var w=0;w<l;w++){var U=d[m][w],G=d[m][w+1],F=d[m+1][w+1],S=d[m+1][w];0===m?(P[u++]=U,P[u++]=F,P[u++]=S):m===i-1?(P[u++]=U,P[u++]=G,P[u++]=F):(P[u++]=U,P[u++]=G,P[u++]=F,P[u++]=F,P[u++]=S,P[u++]=U)}v.assert(u===P.length);var p={};p[v.VertexAttrConstants.POSITION]=P,p[v.VertexAttrConstants.NORMAL]=P,p[v.VertexAttrConstants.UV0]=P;var T={};return T[v.VertexAttrConstants.POSITION]={size:3,data:f},T[v.VertexAttrConstants.NORMAL]={size:3,data:y},T[v.VertexAttrConstants.UV0]={size:2,data:V},new c.GeometryData(T,p)}function y(t,e,r){function a(e,r){var a;e>r&&(a=[r,e],e=a[0],r=a[1]);var o=e.toString()+"."+r.toString();if(f[o])return f[o];var s=n.length;return n.length+=3,i.add(n,3*e,n,3*r,n,s),i.scale(n,s,t/i.length(n,s)),s/=3,f[o]=s,s}var n,o,s=t;if(r)n=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],o=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]);else{var l=s*(1+Math.sqrt(5))/2;n=[-s,l,0,s,l,0,-s,-l,0,s,-l,0,0,-s,l,0,s,l,0,-s,-l,0,s,-l,l,0,-s,l,0,s,-l,0,-s,-l,0,s],o=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1])}for(var A=0;A<n.length;A+=3)i.scale(n,A,t/i.length(n,A));for(var f={},A=0;A<e;A++){for(var y=o.length,V=new Uint32Array(4*y),d=0;d<y;d+=3){var u=o[d],m=o[d+1],O=o[d+2],h=a(u,m),x=a(m,O),C=a(O,u),w=4*d;V[w]=u,V[w+1]=h,V[w+2]=C,V[w+3]=m,V[w+4]=x,V[w+5]=h,V[w+6]=O,V[w+7]=C,V[w+8]=x,V[w+9]=h,V[w+10]=x,V[w+11]=C}o=V,f={}}for(var I=new Float32Array(n),A=0;A<I.length;A+=3)i.normalize(I,A);var g={};g[v.VertexAttrConstants.POSITION]=o,g[v.VertexAttrConstants.NORMAL]=o;var M={};return M[v.VertexAttrConstants.POSITION]={size:3,data:new Float32Array(n)},M[v.VertexAttrConstants.NORMAL]={size:3,data:I},new c.GeometryData(M,g)}function m(t,e,r,a,n,o,s,l){var i=e?new Float64Array([e[0],e[1],e[2]]):new Float32Array([0,0,0]),A=t?new Float32Array([t[0],t[1],t[2]]):new Float32Array([0,0,1]),f=o?new Float32Array(o):new Float32Array([0,0]),y=r?new Uint8Array([255*r[0],255*r[1],255*r[2],r.length>3?255*r[3]:255]):new Uint8Array([255,255,255,255]),V=null!=a&&2===a.length?new Float32Array(a):new Float32Array([1,1]),d={};if(d[v.VertexAttrConstants.POSITION]={size:3,data:i},d[v.VertexAttrConstants.NORMAL]={size:3,data:A},d[v.VertexAttrConstants.UV0]={size:f.length,data:f},d[v.VertexAttrConstants.COLOR]={size:4,data:y},d[v.VertexAttrConstants.SIZE]={size:2,data:V},null!=n){var u=new Float32Array([n[0],n[1],n[2],n[3]]);d[v.VertexAttrConstants.AUXPOS1]={size:4,data:u}}if(null!=s){var m=new Float32Array([s[0],s[1],s[2],s[3]]);d[v.VertexAttrConstants.AUXPOS2]={size:4,data:m}}return null!=l?(c.GeometryData.call(l,d,c.GeometryData.DefaultIndices,c.GeometryData.DefaultOffsets,"point"),l):new c.GeometryData(d,c.GeometryData.DefaultIndices,c.GeometryData.DefaultOffsets,"point")}function O(t,e,r,a,n,o,s,c){var l=c.vertexAttributes;if(null!=t){var i=l[v.VertexAttrConstants.NORMAL].data;i[0]=t[0],i[1]=t[1],i[2]=t[2]}if(null!=e){var i=l[v.VertexAttrConstants.POSITION].data;i[0]=e[0],i[1]=e[1],i[2]=e[2]}if(null!=r){var i=l[v.VertexAttrConstants.COLOR].data;i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3]}if(null!=a){var i=l[v.VertexAttrConstants.SIZE].data;i[0]=a[0],i[1]=a[1]}if(null!=n){var i=l[v.VertexAttrConstants.AUXPOS1].data;i[0]=n[0],i[1]=n[1],i[2]=n[2],i[3]=n[3]}if(null!=o){var i=l[v.VertexAttrConstants.UV0].data;i[0]=o[0],i[1]=o[1]}if(null!=s){var i=l[v.VertexAttrConstants.AUXPOS2].data;i[0]=s[0],i[1]=s[1],i[2]=s[2],i[3]=s[3]}return c}function h(t,e){for(var r=new Float32Array(3*t.length),a=new Float32Array(e?3*t.length:3),n=new Uint32Array(t.length),o=new Uint32Array(t.length),s=0;s<t.length;s++)r[3*s]=t[s][0],r[3*s+1]=t[s][1],r[3*s+2]=t[s][2],e&&(a[3*s]=e[s][0],a[3*s+1]=e[s][1],a[3*s+2]=e[s][2]),n[s]=s,o[s]=0;e||(a[0]=0,a[1]=1,a[2]=0);var l=new Float32Array(2);l[0]=0,l[1]=0;var i={};i[v.VertexAttrConstants.POSITION]=n,i[v.VertexAttrConstants.NORMAL]=e?n:o,i[v.VertexAttrConstants.UV0]=o;var A={};return A[v.VertexAttrConstants.POSITION]={size:3,data:r},A[v.VertexAttrConstants.NORMAL]={size:3,data:a},A[v.VertexAttrConstants.UV0]={size:2,data:l},new c.GeometryData(A,i,c.GeometryData.DefaultOffsets,"point")}function x(){var t=new Float32Array([0,0,0,0,0,100,100,0,0]),e=new Uint32Array([0,1,2]),r=new Float32Array([0,1,0]),a=new Uint32Array([0,0,0]),n=new Float32Array([0,0]),o=new Uint32Array([0,0,0]),s={};s[v.VertexAttrConstants.POSITION]=e,s[v.VertexAttrConstants.NORMAL]=a,s[v.VertexAttrConstants.UV0]=o;var l={};return l[v.VertexAttrConstants.POSITION]={size:3,data:t},l[v.VertexAttrConstants.NORMAL]={size:3,data:r},l[v.VertexAttrConstants.UV0]={size:2,data:n},new c.GeometryData(l,s)}function C(t){var e=new Float32Array(12);if(t)for(var r=0;r<4;r++)for(var a=0;a<3;a++)e[3*r+a]=t[r][a];else e[0]=-1,e[1]=-1,e[2]=0,e[3]=1,e[4]=-1,e[5]=0,e[6]=1,e[7]=1,e[8]=0,e[9]=-1,e[10]=1,e[11]=0;var n=new Uint32Array([0,1,2,2,3,0]),o=new Float32Array([0,0,1]),s=new Uint32Array([0,0,0,0,0,0]),l=new Float32Array([0,0,1,0,1,1,0,1]),i=new Uint8Array([255,255,255,255]),A={};A[v.VertexAttrConstants.POSITION]=n,A[v.VertexAttrConstants.NORMAL]=s,A[v.VertexAttrConstants.UV0]=n,A[v.VertexAttrConstants.COLOR]=s;var f={};return f[v.VertexAttrConstants.POSITION]={size:3,data:e},f[v.VertexAttrConstants.NORMAL]={size:3,data:o},f[v.VertexAttrConstants.UV0]={size:2,data:l},f[v.VertexAttrConstants.COLOR]={size:4,data:i},new c.GeometryData(f,A)}function w(t,e,r,n,o,s){void 0===o&&(o=!0),void 0===s&&(s=!0);var l=0,i=e,A=t,f=a.vec3f32.fromValues(0,l,0),y=a.vec3f32.fromValues(0,l+A,0),V=a.vec3f32.fromValues(0,-1,0),d=a.vec3f32.fromValues(0,1,0);n&&(l=A,y=a.vec3f32.fromValues(0,0,0),f=a.vec3f32.fromValues(0,l,0),V=a.vec3f32.fromValues(0,1,0),d=a.vec3f32.fromValues(0,-1,0));var u=[y,f],m=[V,d],O=r+2,h=Math.sqrt(A*A+i*i);if(n)for(var x=r-1;x>=0;x--){var C=x*(2*Math.PI/r),w=a.vec3f32.fromValues(Math.cos(C)*i,l,Math.sin(C)*i);u.push(w);var I=a.vec3f32.fromValues(A*Math.cos(C)/h,-i/h,A*Math.sin(C)/h);m.push(I)}else for(var x=0;x<r;x++){var C=x*(2*Math.PI/r),w=a.vec3f32.fromValues(Math.cos(C)*i,l,Math.sin(C)*i);u.push(w);var I=a.vec3f32.fromValues(A*Math.cos(C)/h,i/h,A*Math.sin(C)/h);m.push(I)}var g=new Uint32Array(2*(r+2)*3),M=new Uint32Array(2*(r+2)*3),z=0,N=0;if(o){for(var x=3;x<u.length;x++)g[z++]=1,g[z++]=x-1,g[z++]=x,M[N++]=0,M[N++]=0,M[N++]=0;g[z++]=u.length-1,g[z++]=2,g[z++]=1,M[N++]=0,M[N++]=0,M[N++]=0}if(s){for(var x=3;x<u.length;x++)g[z++]=x,g[z++]=x-1,g[z++]=0,M[N++]=x,M[N++]=x-1,M[N++]=1;g[z++]=0,g[z++]=2,g[z++]=u.length-1,M[N++]=1,M[N++]=2,M[N++]=m.length-1}for(var P=new Float32Array(3*O),x=0;x<O;x++)P[3*x]=u[x][0],P[3*x+1]=u[x][1],P[3*x+2]=u[x][2];for(var U=new Float32Array(3*O),x=0;x<O;x++)U[3*x]=m[x][0],U[3*x+1]=m[x][1],U[3*x+2]=m[x][2];var G={};G[v.VertexAttrConstants.POSITION]=g,G[v.VertexAttrConstants.NORMAL]=M;var F={};return F[v.VertexAttrConstants.POSITION]={size:3,data:P},F[v.VertexAttrConstants.NORMAL]={size:3,data:U},new c.GeometryData(F,G)}function I(t,e,n,o,s,l){var i=o?a.vec3f32.clone(o):a.vec3f32.fromValues(1,0,0),A=s?a.vec3f32.clone(s):a.vec3f32.fromValues(0,0,0),f=void 0===l||l,y=a.vec3f32.create();r.vec3.normalize(y,i);var V=a.vec3f32.create();r.vec3.scale(V,y,Math.abs(t));var d=a.vec3f32.create();r.vec3.scale(d,V,-.5),r.vec3.add(d,d,A);var u=a.vec3f32.fromValues(0,1,0);Math.abs(1-r.vec3.dot(y,u))<.2&&r.vec3.set(u,0,0,1);var m=a.vec3f32.create();r.vec3.cross(m,y,u),r.vec3.normalize(m,m),r.vec3.cross(u,m,y);var O=2*n+(f?2:0),h=n+(f?2:0),x=new Float32Array(3*O),C=new Float32Array(3*h),w=new Float32Array(2*O),I=new Uint32Array(3*n*(f?4:2)),g=new Uint32Array(3*n*(f?4:2));f&&(x[3*(O-2)+0]=d[0],x[3*(O-2)+1]=d[1],x[3*(O-2)+2]=d[2],w[2*(O-2)]=0,w[2*(O-2)+1]=0,x[3*(O-1)+0]=x[3*(O-2)+0]+V[0],x[3*(O-1)+1]=x[3*(O-2)+1]+V[1],x[3*(O-1)+2]=x[3*(O-2)+2]+V[2],w[2*(O-1)]=1,w[2*(O-1)+1]=1,C[3*(h-2)+0]=-y[0],C[3*(h-2)+1]=-y[1],C[3*(h-2)+2]=-y[2],C[3*(h-1)+0]=y[0],C[3*(h-1)+1]=y[1],C[3*(h-1)+2]=y[2]);for(var M=function(t,e,r){I[t]=e,g[t]=r},z=0,N=a.vec3f32.create(),P=a.vec3f32.create(),U=0;U<n;U++){var G=U*(2*Math.PI/n);r.vec3.scale(N,u,Math.sin(G)),r.vec3.scale(P,m,Math.cos(G)),r.vec3.add(N,N,P),C[3*U+0]=N[0],C[3*U+1]=N[1],C[3*U+2]=N[2],r.vec3.scale(N,N,e),r.vec3.add(N,N,d),x[3*U+0]=N[0],x[3*U+1]=N[1],x[3*U+2]=N[2],w[2*U+0]=U/n,w[2*U+1]=0,x[3*(U+n)+0]=x[3*U+0]+V[0],x[3*(U+n)+1]=x[3*U+1]+V[1],x[3*(U+n)+2]=x[3*U+2]+V[2],w[2*(U+n)+0]=U/n,w[2*U+1]=1;var F=(U+1)%n;M(z++,U,U),M(z++,U+n,U),M(z++,F,F),M(z++,F,F),M(z++,U+n,U),M(z++,F+n,F)}if(f){for(var U=0;U<n;U++){var F=(U+1)%n;M(z++,O-2,h-2),M(z++,U,h-2),M(z++,F,h-2)}for(var U=0;U<n;U++){var F=(U+1)%n;M(z++,U+n,h-1),M(z++,O-1,h-1),M(z++,F+n,h-1)}}var S={};S[v.VertexAttrConstants.POSITION]=I,S[v.VertexAttrConstants.NORMAL]=g,S[v.VertexAttrConstants.UV0]=I;var p={};return p[v.VertexAttrConstants.POSITION]={size:3,data:x},p[v.VertexAttrConstants.NORMAL]={size:3,data:C},p[v.VertexAttrConstants.UV0]={size:2,data:w},new c.GeometryData(p,S)}function g(e,r,a,n,o){a=a||10,n=null==n||n,v.assert(e.length>1);for(var s=[[0,0,0]],c=[],l=[],i=0;i<a;i++){c.push([0,-i-1,-(i+1)%a-1]);var A=i/a*2*Math.PI;l.push([Math.cos(A)*r,Math.sin(A)*r])}return t.createPathExtrusionGeometry(l,e,s,c,n,o)}function M(t,e,s,l,i,A){void 0===A&&(A=a.vec3f32.fromValues(0,0,0));var f=t.length,y=new Float32Array(e.length*f*3+(6*s.length||0)),d=new Float32Array(e.length*f+(2*s.length||0)),u=new Float32Array(e.length*f*3+(s?6:0)),m=(e.length-1)*f*6+3*l.length*2,O=new Uint32Array(m),h=new Uint32Array(m),x=0,C=0,w=0,I=0,g=0,M=a.vec3f32.create(),z=a.vec3f32.create(),N=a.vec3f32.create(),P=a.vec3f32.create(),U=a.vec3f32.create(),G=a.vec3f32.create(),F=a.vec3f32.create(),S=n.vec3f64.create(),T=a.vec3f32.create(),R=a.vec3f32.create(),L=a.vec3f32.create(),D=a.vec3f32.create(),b=a.vec3f32.create(),E=o.plane.create();r.vec3.set(T,0,1,0),r.vec3.subtract(z,e[1],e[0]),r.vec3.normalize(z,z),i?(r.vec3.add(S,e[0],A),r.vec3.normalize(N,S)):r.vec3.set(N,0,0,1),p(z,N,T,T,U,N,V),r.vec3.copy(P,N),r.vec3.copy(D,U);for(var q=0;q<s.length;q++)r.vec3.scale(G,U,s[q][0]),r.vec3.scale(S,N,s[q][2]),r.vec3.add(G,G,S),r.vec3.add(G,G,e[0]),y[x++]=G[0],y[x++]=G[1],y[x++]=G[2],d[w++]=0;u[C++]=-z[0],u[C++]=-z[1],u[C++]=-z[2];for(var q=0;q<l.length;q++)O[I++]=l[q][0]>0?l[q][0]:-l[q][0]-1+s.length,O[I++]=l[q][1]>0?l[q][1]:-l[q][1]-1+s.length,O[I++]=l[q][2]>0?l[q][2]:-l[q][2]-1+s.length,h[g++]=0,h[g++]=0,h[g++]=0;for(var B=s.length,X=s.length-1,k=0;k<e.length;k++){var Z=!1;if(k>0){r.vec3.copy(M,z),k<e.length-1?(r.vec3.subtract(z,e[k+1],e[k]),r.vec3.normalize(z,z)):Z=!0,r.vec3.add(R,M,z),r.vec3.normalize(R,R),r.vec3.add(L,e[k-1],P),o.plane.fromPositionAndNormal(e[k],R,E);o.plane.intersectRay(E,o.ray.wrap(L,M),S)?(r.vec3.subtract(S,S,e[k]),r.vec3.normalize(N,S),r.vec3.cross(U,R,N),r.vec3.normalize(U,U)):p(R,P,D,T,U,N,V),r.vec3.copy(P,N),r.vec3.copy(D,U)}i&&(r.vec3.add(S,e[k],A),r.vec3.normalize(b,S));for(var j=0;j<f;j++)if(r.vec3.scale(G,U,t[j][0]),r.vec3.scale(S,N,t[j][1]),r.vec3.add(G,G,S),r.vec3.normalize(F,G),u[C++]=F[0],u[C++]=F[1],u[C++]=F[2],d[w++]=i?r.vec3.dot(G,b):G[2],r.vec3.add(G,G,e[k]),y[x++]=G[0],y[x++]=G[1],y[x++]=G[2],!Z){var H=(j+1)%f;O[I++]=B+j,O[I++]=B+f+j,O[I++]=B+H,O[I++]=B+H,O[I++]=B+f+j,O[I++]=B+f+H;for(var J=0;J<6;J++)h[g++]=O[I-6+J]-X}B+=f}for(var K=e[e.length-1],q=0;q<s.length;q++)r.vec3.scale(G,U,s[q][0]),r.vec3.scale(S,N,s[q][1]),r.vec3.add(G,G,S),r.vec3.add(G,G,K),y[x++]=G[0],y[x++]=G[1],y[x++]=G[2],d[w++]=0;var Q=C/3;u[C++]=z[0],u[C++]=z[1],u[C++]=z[2];for(var W=B-f,q=0;q<l.length;q++)O[I++]=l[q][0]>=0?B+l[q][0]:-l[q][0]-1+W,O[I++]=l[q][2]>=0?B+l[q][2]:-l[q][2]-1+W,O[I++]=l[q][1]>=0?B+l[q][1]:-l[q][1]-1+W,h[g++]=Q,h[g++]=Q,h[g++]=Q;var Y={};Y[v.VertexAttrConstants.POSITION]=O,Y[v.VertexAttrConstants.NORMAL]=h;var $={};return $[v.VertexAttrConstants.POSITION]={size:3,data:y},$.zOffset={size:1,data:d},$[v.VertexAttrConstants.NORMAL]={size:3,data:u},new c.GeometryData($,Y)}function z(t,e){v.assert(t.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),v.assert(3===t[0].length,"createPolylineGeometry(): malformed vertex"),v.assert(void 0===e||e.length===t.length,"createPolylineGeometry: need same number of points and normals"),v.assert(void 0===e||3===e[0].length,"createPolylineGeometry(): malformed normal");for(var r=new Float32Array(3*t.length),a=new Uint32Array(2*(t.length-1)),n=0,o=0,s=0;s<t.length;s++){for(var l=0;l<3;l++)r[n++]=t[s][l];s>0&&(a[o++]=s-1,a[o++]=s)}var i={},A={};if(i[v.VertexAttrConstants.POSITION]=a,A[v.VertexAttrConstants.POSITION]={size:3,data:r},e){for(var f=new Float32Array(3*e.length),y=0,s=0;s<t.length;s++)for(var l=0;l<3;l++)f[y++]=e[s][l];i[v.VertexAttrConstants.NORMAL]=a,A[v.VertexAttrConstants.NORMAL]={size:3,data:f}}return new c.GeometryData(A,i,c.GeometryData.DefaultOffsets,"line")}function N(t,e,r,a){for(var n,o,s=new Float32Array(18),l=[[-e,0,a/2],[r,0,a/2],[0,t,a/2],[-e,0,-a/2],[r,0,-a/2],[0,t,-a/2]],i=[0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5],A=0;A<6;A++)s[3*A]=l[A][0],s[3*A+1]=l[A][1],s[3*A+2]=l[A][2];var f=(n={},n[v.VertexAttrConstants.POSITION]=new Uint32Array(i),n),y=(o={},o[v.VertexAttrConstants.POSITION]={size:3,data:s},o);return new c.GeometryData(y,f)}function P(t,e){for(var a=t.vertexAttributes[v.VertexAttrConstants.POSITION].data,n=0;n<a.length;n+=3){var o=a[n],s=a[n+1],c=a[n+2];r.vec3.set(d,o,s,c),r.vec3.transformMat4(d,d,e),a[n]=d[0],a[n+1]=d[1],a[n+2]=d[2]}}function U(t,e){var r=e||[1,1,1,1],a=new Uint8Array(4);a[0]=255*r[0],a[1]=255*r[1],a[2]=255*r[2],a[3]=255*(r.length>3?r[3]:1);var n={},o=t.getVertexAttr();for(var s in o)n[s]=o[s];n[v.VertexAttrConstants.COLOR]={size:4,data:a};var l={};for(var s in t.indices)l[s]=t.indices[s];var i=l[v.VertexAttrConstants.POSITION].length;return l[v.VertexAttrConstants.COLOR]=new Uint32Array(i),t=new c.GeometryData(n,l,t.componentOffsets,t.primitiveType)}function G(t){for(var e=t.getVertexAttr(),a=t.indices,n=s.Vec3Compact.subtract,o=a.position.length/3,c=new Float32Array(3*o),l=e.position.data,i=0,A=a.position,f=new Uint32Array(A.length),y=0;y<A.length;y+=3){n(l,3*A[y],l,3*A[y+2],u,0),n(l,3*A[y],l,3*A[y+1],d,0),r.vec3.cross(d,d,u),r.vec3.normalize(d,d);var V=i/3;c[i++]=d[0],c[i++]=d[1],c[i++]=d[2],f[y]=V,f[y+1]=V,f[y+2]=V}e[v.VertexAttrConstants.NORMAL]={size:3,data:c,offsetIdx:0,strideIdx:3},a[v.VertexAttrConstants.NORMAL]=f}function F(t,e){void 0===e&&(e=t);var r=t.getVertexAttr(),a=r.position.data,n=r.normal.data,o=e.getVertexAttr(),s=o.position.data,c=o.normal.data;if(n)for(var v=0;v<n.length;v+=3){var l=n[v+1];c[v+1]=-n[v+2],c[v+2]=l}if(a)for(var v=0;v<a.length;v+=3){var l=a[v+1];s[v+1]=-a[v+2],s[v+2]=l}return e}function S(t,e,a,n,o){return!(Math.abs(r.vec3.dot(e,t))>o)&&(r.vec3.cross(a,t,e),r.vec3.normalize(a,a),r.vec3.cross(n,a,t),r.vec3.normalize(n,n),!0)}function p(t,e,r,a,n,o,s){return S(t,e,n,o,s)||S(t,r,n,o,s)||S(t,a,n,o,s)}t.createBoxGeometry=l.createGeometry,t.createDiamondGeometry=A.createGeometry,t.createTetrahedronGeometry=f.createGeometry,t.createSphereGeometry=e,t.createPolySphereGeometry=y,t.createPointGeometry=m,t.updatePointGeometry=O,t.createPointArrayGeometry=h,t.createTriangleGeometry=x,t.createSquareGeometry=C,t.createConeGeometry=w,t.createCylinderGeometry=I,t.createTubeGeometry=g,t.createPathExtrusionGeometry=M,t.createPolylineGeometry=z,t.createExtrudedTriangle=N,t.transformInPlace=P,t.addVertexColors=U,t.addNormals=G,t.cgToGIS=F,t.makeOrthoBasisDirUp=S,t.makeOrthoBasisDirUpFallback=p}(y||(y={}));var V=.99619469809,d=a.vec3f32.create(),u=a.vec3f32.create();return y});